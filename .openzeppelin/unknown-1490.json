{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x5c7421fcCA16C685cEC5aaFf745a9a6BDf75Ba06",
      "kind": "uups"
    },
    {
      "address": "0xaEf0a72A661B82CB1d871FCA5117486C664EeF13",
      "kind": "uups"
    },
    {
      "address": "0xf793A4faD64241c7273b9329FE39e433c2D45d71",
      "txHash": "0xbfc943038d9e84cd2863875fe6b392c404864bce40fef7ef7cd8e0b9914e6886",
      "kind": "uups"
    },
    {
      "address": "0x581f428C07142F10D59731515a0045bf3ee5f561",
      "txHash": "0x91b4f438dc3a4a6ff24393f7f993ac8c8236a60ad3519cfc3ae7a6fc6985f846",
      "kind": "transparent"
    },
    {
      "address": "0x1D607d8c617A09c638309bE2Ceb9b4afF42236dA",
      "txHash": "0x116a95b803d77e379e4183135cef1d3138b27b35019c7be655fbcf6e60148e81",
      "kind": "transparent"
    },
    {
      "address": "0xABA06E4A2Eb17C686Fc67C81d26701D9b82e3a41",
      "kind": "uups"
    },
    {
      "address": "0x79AfA7Dd7AE14F9C5255f1AC9c8A2b8bEb2CcCD1",
      "kind": "uups"
    },
    {
      "address": "0xeBF19B6f5c3f99BC5F75137D1113F506C7f6799E",
      "kind": "uups"
    },
    {
      "address": "0x3925b92Ef881A9B0465Ef1ebDEE5D6C0ED4d464b",
      "kind": "uups"
    },
    {
      "address": "0x3ccc3F22462cAe34766820894D04a40381201ef9",
      "kind": "uups"
    },
    {
      "address": "0x8e7C7f0DF435Be6773641f8cf62C590d7Dde5a8a",
      "kind": "uups"
    },
    {
      "address": "0x4D5B24179c656A88087eF4369887fD58AB5e8EF3",
      "txHash": "0x426d542d64696e984e2ba421d098dba2f44e91fc9da2aa768c23dfeb64fab63f",
      "kind": "uups"
    }
  ],
  "impls": {
    "c4a2a4081b96635c925a2e96e2b32741a16566edede75f939d6f98213169af3a": {
      "address": "0x052A3584ccD2E643eaFFb02C4d5cbB092D6E1366",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_creditClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:46"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:47"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4307_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:92"
          },
          {
            "label": "usdRedeemed",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:96"
          },
          {
            "label": "_blockTransfers",
            "offset": 0,
            "slot": "360",
            "type": "t_bool",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:97"
          },
          {
            "label": "BlockedAccounts",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:98"
          },
          {
            "label": "BlockedVaults",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:100"
          },
          {
            "label": "BurnList",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreditNFT)4285_storage": {
            "label": "struct CollectorCredit.CreditNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "activeBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(CreditNFTClass)4274_storage": {
            "label": "struct CollectorCredit.CreditNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GlobalData)4307_storage": {
            "label": "struct CollectorCredit.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "CreditNFTs",
                "type": "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "CreditNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CreditNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e8eddace1ccc76e5ab7dd9ca5ffc30e0be0f72daa7c544bc7cf594702cc12fe7": {
      "address": "0xafA939647289B9dA8A448cfe024f159Bd145258c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_coreClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)3944_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:73"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)3944_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:75"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)5571_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:154"
          },
          {
            "label": "BLOCKS_IN_MONTH",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:155"
          },
          {
            "label": "totalCurrentDepositBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:155"
          },
          {
            "label": "boosterContract",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(VitruveoBoosterNFT)5434",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:158"
          },
          {
            "label": "lastItem",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:522"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_array(t_struct(StakeInfo)7209_storage)dyn_storage)",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:673"
          },
          {
            "label": "stakeUnlockedTotal",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:673"
          },
          {
            "label": "stakeLockedTotal",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:674"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeInfo)7209_storage)dyn_storage": {
            "label": "struct CoreVestV2.StakeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VitruveoBoosterNFT)5434": {
            "label": "contract VitruveoBoosterNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(StakeInfo)7209_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreVestV2.StakeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFT)5545_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFTClass)5512_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CoreNFT)5545_storage": {
            "label": "struct CoreVestV2.CoreNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "grantBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "grantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "unlockBasisPoints",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voteCredits",
                "type": "t_uint16",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "lockMonths",
                "type": "t_uint16",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "vestingMonths",
                "type": "t_uint16",
                "offset": 6,
                "slot": "5"
              },
              {
                "label": "claimedGrantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRebaseAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "boosts",
                "type": "t_uint16",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "boostBasisPoints",
                "type": "t_uint16",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "isRevocable",
                "type": "t_bool",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "isRevoked",
                "type": "t_bool",
                "offset": 5,
                "slot": "8"
              },
              {
                "label": "isKyc",
                "type": "t_bool",
                "offset": 6,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CoreNFTClass)5512_storage": {
            "label": "struct CoreVestV2.CoreNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isTransferable",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allowMultiple",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "totalGrants",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)3944_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)5571_storage": {
            "label": "struct CoreVestV2.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDepositBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "boosts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CoreNFTs",
                "type": "t_mapping(t_uint256,t_struct(CoreNFT)5545_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "CoreNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CoreNFTClass)5512_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "CoreNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)7209_storage": {
            "label": "struct CoreVestV2.StakeInfo",
            "members": [
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b1ff98de996da5bb38aadcc7c33d1137d2aabcd71ff53cc7454bceed072f5081": {
      "address": "0x1f746168f0CF9Ff98Ca427f63949d2e1E7445F68",
      "txHash": "0x6287faeb1e9172b060576368cfedb76423136c1612ddd0f8608e9de675bb10bf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_coreClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2842_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:77"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2842_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:79"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)5572_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:158"
          },
          {
            "label": "BLOCKS_IN_MONTH",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:159"
          },
          {
            "label": "totalCurrentDepositBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:159"
          },
          {
            "label": "boosterContract",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(VitruveoBoosterNFT)5427",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:162"
          },
          {
            "label": "lastItem",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:524"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_array(t_struct(StakeInfo)7203_storage)dyn_storage)",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:675"
          },
          {
            "label": "stakeUnlockedTotal",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:675"
          },
          {
            "label": "stakeLockedTotal",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:676"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeInfo)7203_storage)dyn_storage": {
            "label": "struct CoreVestV2.StakeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VitruveoBoosterNFT)5427": {
            "label": "contract VitruveoBoosterNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(StakeInfo)7203_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreVestV2.StakeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFT)5546_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFTClass)5513_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CoreNFT)5546_storage": {
            "label": "struct CoreVestV2.CoreNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "grantBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "grantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "unlockBasisPoints",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voteCredits",
                "type": "t_uint16",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "lockMonths",
                "type": "t_uint16",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "vestingMonths",
                "type": "t_uint16",
                "offset": 6,
                "slot": "5"
              },
              {
                "label": "claimedGrantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRebaseAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "boosts",
                "type": "t_uint16",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "boostBasisPoints",
                "type": "t_uint16",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "isRevocable",
                "type": "t_bool",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "isRevoked",
                "type": "t_bool",
                "offset": 5,
                "slot": "8"
              },
              {
                "label": "isKyc",
                "type": "t_bool",
                "offset": 6,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CoreNFTClass)5513_storage": {
            "label": "struct CoreVestV2.CoreNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isTransferable",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allowMultiple",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "totalGrants",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)2842_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)5572_storage": {
            "label": "struct CoreVestV2.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDepositBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "boosts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CoreNFTs",
                "type": "t_mapping(t_uint256,t_struct(CoreNFT)5546_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "CoreNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CoreNFTClass)5513_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "CoreNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)7203_storage": {
            "label": "struct CoreVestV2.StakeInfo",
            "members": [
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "eaee551f982958e51a5fb7bc87f03e71922fefd25bcbce51600967365e92a844": {
      "address": "0x6F632288150619a941Ed76Fa2FF21C59e04a016e",
      "txHash": "0xfa4ba1f3ba5e194d8639aa9e81c393fdf66c6c0e59c8994e86d4fcef635896a8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:71"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:73"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3084_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3091_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c72793daf108464f1ec9b925cd3176e2908518f110a845a702681b12b818abd2": {
      "address": "0xFE0b53D277eB151D72a0b044Ba0eA0C8E8AB19ee",
      "txHash": "0xe6d030a66b667f7c80f521d1b0f55294d63089fb78164d50f242e7b3cc4c5d21",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:71"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:73"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3084_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3091_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "053e9b329ee2dcae1c99e2666d6629da3ac685dc773cffbc2bb3325c5a309c18": {
      "address": "0xffbC071d5e2B6F4bC29F51e89ca335418F4bbb38",
      "txHash": "0x0205d5c57fe2d336742de48da06def105bb3802e1f620654e80fda469e64446c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)4319_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)4326_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:71"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:73"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)4326_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)4326_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)4319_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)4319_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)4326_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "518b0381e0e8542b3bc31d4606d57b3c911a658d952504957d46db59ab1299ad": {
      "address": "0x1F26cC4014a438330ca183c4422590Ced62447d6",
      "txHash": "0xafba2dd53696c6750a8d9ecf36b1180597cd394ace1383a9c1268bb7fbe8add7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:68"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:72"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:73"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3084_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3091_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "298cd9a71ac6324f870d2c7eec40e1a2a0bd8b4a6637ad19265354df170c2f0d": {
      "address": "0x0005CF97366a552623fC2f840B7Fe9e7e9bb080b",
      "txHash": "0x4ce2a5b154fb4b15cff9ce4e78bec474c95a9cdeeb61dfe64c7e43e4e9888eba",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:68"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:72"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:73"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3084_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3091_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c2a9f28f0e091f647416425c69690278141e92153c8c8040cf5ea911e1341f1a": {
      "address": "0xC979f2fE8901D0902BEA1892fE70D411F47c7196",
      "txHash": "0x025d2a1a3c086236507f5c3a917b3e5dcf8d39361db622afb1985d6e256b4082",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_coreClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:77"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:79"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4392_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:158"
          },
          {
            "label": "BLOCKS_IN_MONTH",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:159"
          },
          {
            "label": "totalCurrentDepositBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:159"
          },
          {
            "label": "boosterContract",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(VitruveoBoosterNFT)4247",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:162"
          },
          {
            "label": "lastItem",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:524"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_array(t_struct(StakeInfo)6023_storage)dyn_storage)",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:676"
          },
          {
            "label": "stakeUnlockedTotal",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:678"
          },
          {
            "label": "stakeLockedTotal",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:679"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeInfo)6023_storage)dyn_storage": {
            "label": "struct CoreVestV2.StakeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VitruveoBoosterNFT)4247": {
            "label": "contract VitruveoBoosterNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(StakeInfo)6023_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreVestV2.StakeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFT)4366_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFTClass)4333_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CoreNFT)4366_storage": {
            "label": "struct CoreVestV2.CoreNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "grantBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "grantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "unlockBasisPoints",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voteCredits",
                "type": "t_uint16",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "lockMonths",
                "type": "t_uint16",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "vestingMonths",
                "type": "t_uint16",
                "offset": 6,
                "slot": "5"
              },
              {
                "label": "claimedGrantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRebaseAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "boosts",
                "type": "t_uint16",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "boostBasisPoints",
                "type": "t_uint16",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "isRevocable",
                "type": "t_bool",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "isRevoked",
                "type": "t_bool",
                "offset": 5,
                "slot": "8"
              },
              {
                "label": "isKyc",
                "type": "t_bool",
                "offset": 6,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CoreNFTClass)4333_storage": {
            "label": "struct CoreVestV2.CoreNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isTransferable",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allowMultiple",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "totalGrants",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4392_storage": {
            "label": "struct CoreVestV2.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDepositBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "boosts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CoreNFTs",
                "type": "t_mapping(t_uint256,t_struct(CoreNFT)4366_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "CoreNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CoreNFTClass)4333_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "CoreNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)6023_storage": {
            "label": "struct CoreVestV2.StakeInfo",
            "members": [
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ef7a1b75b211c251304dff96833b74dee629f38e015a94934b4fe1fd4a343be1": {
      "address": "0x86b8739EfEfBA4b44bA5A1d2cd5Dfc8305494ee2",
      "txHash": "0xc215eb77688370ab0e260c5e4b073c9effcdd0476e45168e2e731c61796680fa",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_coreClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:78"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:80"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4405_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:159"
          },
          {
            "label": "BLOCKS_IN_MONTH",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "totalCurrentDepositBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "boosterContract",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(VitruveoBoosterNFT)4247",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:163"
          },
          {
            "label": "lastItem",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:525"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_array(t_struct(StakeInfo)6036_storage)dyn_storage)",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:676"
          },
          {
            "label": "stakeUnlockedTotal",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:678"
          },
          {
            "label": "stakeLockedTotal",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:678"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeInfo)6036_storage)dyn_storage": {
            "label": "struct CoreVestV2.StakeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VitruveoBoosterNFT)4247": {
            "label": "contract VitruveoBoosterNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(StakeInfo)6036_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreVestV2.StakeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFT)4379_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFTClass)4346_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CoreNFT)4379_storage": {
            "label": "struct CoreVestV2.CoreNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "grantBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "grantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "unlockBasisPoints",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voteCredits",
                "type": "t_uint16",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "lockMonths",
                "type": "t_uint16",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "vestingMonths",
                "type": "t_uint16",
                "offset": 6,
                "slot": "5"
              },
              {
                "label": "claimedGrantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRebaseAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "boosts",
                "type": "t_uint16",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "boostBasisPoints",
                "type": "t_uint16",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "isRevocable",
                "type": "t_bool",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "isRevoked",
                "type": "t_bool",
                "offset": 5,
                "slot": "8"
              },
              {
                "label": "isKyc",
                "type": "t_bool",
                "offset": 6,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CoreNFTClass)4346_storage": {
            "label": "struct CoreVestV2.CoreNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isTransferable",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allowMultiple",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "totalGrants",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4405_storage": {
            "label": "struct CoreVestV2.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDepositBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "boosts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CoreNFTs",
                "type": "t_mapping(t_uint256,t_struct(CoreNFT)4379_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "CoreNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CoreNFTClass)4346_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "CoreNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)6036_storage": {
            "label": "struct CoreVestV2.StakeInfo",
            "members": [
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "22faffb040fd824443a728074751f75123d3f83f4359b162936f77a42739072c": {
      "address": "0x04BE951C1db29A413B9fe84993663368645696fE",
      "txHash": "0xc08ec68bac437e5ac5a958e8be83af333607bb0fc05bf2a381b521a754db5721",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_coreClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2842_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:78"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2842_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:80"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)5718_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:159"
          },
          {
            "label": "BLOCKS_IN_MONTH",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "totalCurrentDepositBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "boosterContract",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(VitruveoBoosterNFT)5560",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:163"
          },
          {
            "label": "lastItem",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:525"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_array(t_struct(StakeInfo)7349_storage)dyn_storage)",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:676"
          },
          {
            "label": "stakeUnlockedTotal",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:678"
          },
          {
            "label": "stakeLockedTotal",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:678"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeInfo)7349_storage)dyn_storage": {
            "label": "struct CoreVestV2.StakeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VitruveoBoosterNFT)5560": {
            "label": "contract VitruveoBoosterNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(StakeInfo)7349_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreVestV2.StakeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFT)5692_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFTClass)5659_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CoreNFT)5692_storage": {
            "label": "struct CoreVestV2.CoreNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "grantBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "grantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "unlockBasisPoints",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voteCredits",
                "type": "t_uint16",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "lockMonths",
                "type": "t_uint16",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "vestingMonths",
                "type": "t_uint16",
                "offset": 6,
                "slot": "5"
              },
              {
                "label": "claimedGrantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRebaseAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "boosts",
                "type": "t_uint16",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "boostBasisPoints",
                "type": "t_uint16",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "isRevocable",
                "type": "t_bool",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "isRevoked",
                "type": "t_bool",
                "offset": 5,
                "slot": "8"
              },
              {
                "label": "isKyc",
                "type": "t_bool",
                "offset": 6,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CoreNFTClass)5659_storage": {
            "label": "struct CoreVestV2.CoreNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isTransferable",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allowMultiple",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "totalGrants",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)2842_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)5718_storage": {
            "label": "struct CoreVestV2.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDepositBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "boosts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CoreNFTs",
                "type": "t_mapping(t_uint256,t_struct(CoreNFT)5692_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "CoreNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CoreNFTClass)5659_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "CoreNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)7349_storage": {
            "label": "struct CoreVestV2.StakeInfo",
            "members": [
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "34c97e6e9c35c5399e587a05e80eba11e57b8643b8d10746b12775e871853d8e": {
      "address": "0x78B6E6ADa9644B8C0b88a21c31abb011F28b9793",
      "txHash": "0x96436febab6eddc193623a629dc8eaab56992209d610a42cb88c9afae17b99e7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3702_storage)",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:70"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:71"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:74"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:76"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3702_storage)": {
            "label": "mapping(address => struct ZZZZ.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3702_storage": {
            "label": "struct ZZZZ.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a71dba8346cf3a1700f1a7b6ee597f020807db4f6f92a696d284021873ff2d63": {
      "address": "0x9C24D9F0B0C4956Ca0a88744229F474187dB8592",
      "txHash": "0x627ddaf133790b275bc8972129b60f76d2fe88d52728203196ed403bf63c1d1f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3702_storage)",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:69"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3702_storage)": {
            "label": "mapping(address => struct ZZZZ.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3702_storage": {
            "label": "struct ZZZZ.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a65cfe241b39f91a189cb2e0df64cca0fbaafd56d68479cc76945a4d6b3f5fb1": {
      "address": "0x4267B771CE7Ef872A8524f861e5c7BF92cfB5afA",
      "txHash": "0xe53595d830518b5a4e606e3a6db91fafd88653c96bb231625b83e9e4dee105f7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3702_storage)",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:69"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3702_storage)": {
            "label": "mapping(address => struct ZZZZ.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3702_storage": {
            "label": "struct ZZZZ.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ef3d8bba607f77bcd06b72c683abf72a4e30818e3718a10bdebf3c606cd07b8f": {
      "address": "0xc0A83EDb4cB7aA1b6D397883d1fE303E3E647599",
      "txHash": "0x27cc7cd837173accbe7e44f7055a67b0f47ef5915561e37f835f650e2bb07bff",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3702_storage)",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:69"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3702_storage)": {
            "label": "mapping(address => struct ZZZZ.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3702_storage": {
            "label": "struct ZZZZ.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "96b2c681e4a5beb327f96baa3f061d007e54f6948a00e3539e1cca10f3fbd984": {
      "address": "0x52aFAa493944840Ea504156e6b90B3A47B98b37a",
      "txHash": "0x66f8cacee4b2b194e0260238a39c549b0b18bd08f09156b07e5887ffe5098237",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3702_storage)",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:69"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3702_storage)": {
            "label": "mapping(address => struct ZZZZ.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3702_storage": {
            "label": "struct ZZZZ.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c0c0ced758be7fc8b793e3a390a590912759072388ef531f88af02ba07434178": {
      "address": "0x6295e606f7fe0f6A3894451807047661F09d0ABb",
      "txHash": "0xa19b0a2bc13f765b34e1b8fb1812e6d235ef2577a67a56eb416d1402f446f822",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3702_storage)",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ZZZZ",
            "src": "contracts/ZZZZ.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3702_storage)": {
            "label": "mapping(address => struct ZZZZ.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3702_storage": {
            "label": "struct ZZZZ.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "454f1da84a22e39b419e048a5264c0268ec5e1898f8d9ba26200e8e5830847c7": {
      "address": "0x27001E1721b053aAD484137b024F5ED17aD2a15F",
      "txHash": "0x49b69a4a5bb6a88122973eedf66292696a04158765ea75fa8a54ed3a7cd729f8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3702_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3702_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3702_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7f99cd5f1bb08b25df4440218b980b995bd5d9b980e69484bab61af1986a5980": {
      "address": "0x0e5Bb6DcE931479819b442A049B239e460020b10",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20)4559",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:47"
          },
          {
            "label": "total",
            "offset": 0,
            "slot": "402",
            "type": "t_struct(Total)4624_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:81"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "417",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "glyphInfo",
            "offset": 0,
            "slot": "418",
            "type": "t_mapping(t_uint256,t_struct(GlyphInfo)4636_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "tokenGlyph",
            "offset": 0,
            "slot": "419",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "glyphToTokenIds",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "tokenIndexInGlyph",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "tokenRarity",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_enum(Rarity)4669)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "rarityToTokenIds",
            "offset": 0,
            "slot": "423",
            "type": "t_mapping(t_enum(Rarity)4669,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "tokenIndexInRarity",
            "offset": 0,
            "slot": "424",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "glyphCodes",
            "offset": 0,
            "slot": "425",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "426",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarityChances",
            "offset": 0,
            "slot": "427",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "raritySwapRatios",
            "offset": 0,
            "slot": "428",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdrops",
            "offset": 0,
            "slot": "429",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdropResults",
            "offset": 0,
            "slot": "430",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:109"
          },
          {
            "label": "airdropWinners",
            "offset": 0,
            "slot": "431",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:111"
          },
          {
            "label": "_airdrops",
            "offset": 0,
            "slot": "432",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:114"
          },
          {
            "label": "_airdropResults",
            "offset": 0,
            "slot": "433",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:118"
          },
          {
            "label": "_airdropWinners",
            "offset": 0,
            "slot": "434",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:119"
          },
          {
            "label": "threshold",
            "offset": 0,
            "slot": "435",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:121"
          },
          {
            "label": "totalVibes",
            "offset": 0,
            "slot": "436",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:124"
          },
          {
            "label": "currentVibesInInterval",
            "offset": 0,
            "slot": "437",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:125"
          },
          {
            "label": "intervalStartMint",
            "offset": 0,
            "slot": "438",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:128"
          },
          {
            "label": "vibeTokens",
            "offset": 0,
            "slot": "439",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WinnerInfo)4664_storage)dyn_storage": {
            "label": "struct Vortex.WinnerInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)4_storage": {
            "label": "uint8[4]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4559": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(Rarity)4669": {
            "label": "enum Vortex.Rarity",
            "members": [
              "Common",
              "Rare",
              "Ultra",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_uint256)": {
            "label": "mapping(enum Vortex.Rarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(Rarity)4669)": {
            "label": "mapping(uint256 => enum Vortex.Rarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GlyphInfo)4636_storage)": {
            "label": "mapping(uint256 => struct Vortex.GlyphInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlyphInfo)4636_storage": {
            "label": "struct Vortex.GlyphInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "glyph",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "code",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Total)4624_storage": {
            "label": "struct Vortex.Total",
            "members": [
              {
                "label": "sales",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "revenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "inventory",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "counts",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "revenues",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(WinnerInfo)4664_storage": {
            "label": "struct Vortex.WinnerInfo",
            "members": [
              {
                "label": "drawing",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_enum(Rarity)4669",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "winner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a54a3e5327c5e32da32e6623dd24f888a0e92ef9527d712deb0906e3a2930c33": {
      "address": "0xF0Df594105B9dE67AaEAAcc2C13CFAFCB739Ea32",
      "txHash": "0x6c3fe872a5e4bc8767feaaebb9ffea3d82e1708f4db8c1e1f3a290344ccb045e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20)4559",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:47"
          },
          {
            "label": "total",
            "offset": 0,
            "slot": "402",
            "type": "t_struct(Total)4624_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:81"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "417",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "glyphInfo",
            "offset": 0,
            "slot": "418",
            "type": "t_mapping(t_uint256,t_struct(GlyphInfo)4636_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "tokenGlyph",
            "offset": 0,
            "slot": "419",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "glyphToTokenIds",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "tokenIndexInGlyph",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "tokenRarity",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_enum(Rarity)4669)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "rarityToTokenIds",
            "offset": 0,
            "slot": "423",
            "type": "t_mapping(t_enum(Rarity)4669,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "tokenIndexInRarity",
            "offset": 0,
            "slot": "424",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "glyphCodes",
            "offset": 0,
            "slot": "425",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "426",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarityChances",
            "offset": 0,
            "slot": "427",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "raritySwapRatios",
            "offset": 0,
            "slot": "428",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdrops",
            "offset": 0,
            "slot": "429",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdropResults",
            "offset": 0,
            "slot": "430",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:109"
          },
          {
            "label": "airdropWinners",
            "offset": 0,
            "slot": "431",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:111"
          },
          {
            "label": "_airdrops",
            "offset": 0,
            "slot": "432",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:114"
          },
          {
            "label": "_airdropResults",
            "offset": 0,
            "slot": "433",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:118"
          },
          {
            "label": "_airdropWinners",
            "offset": 0,
            "slot": "434",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:119"
          },
          {
            "label": "threshold",
            "offset": 0,
            "slot": "435",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:121"
          },
          {
            "label": "totalVibes",
            "offset": 0,
            "slot": "436",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:124"
          },
          {
            "label": "currentVibesInInterval",
            "offset": 0,
            "slot": "437",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:125"
          },
          {
            "label": "intervalStartMint",
            "offset": 0,
            "slot": "438",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:128"
          },
          {
            "label": "vibeTokens",
            "offset": 0,
            "slot": "439",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WinnerInfo)4664_storage)dyn_storage": {
            "label": "struct Vortex.WinnerInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)4_storage": {
            "label": "uint8[4]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4559": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(Rarity)4669": {
            "label": "enum Vortex.Rarity",
            "members": [
              "Common",
              "Rare",
              "Ultra",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_uint256)": {
            "label": "mapping(enum Vortex.Rarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(Rarity)4669)": {
            "label": "mapping(uint256 => enum Vortex.Rarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GlyphInfo)4636_storage)": {
            "label": "mapping(uint256 => struct Vortex.GlyphInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlyphInfo)4636_storage": {
            "label": "struct Vortex.GlyphInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "glyph",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "code",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Total)4624_storage": {
            "label": "struct Vortex.Total",
            "members": [
              {
                "label": "sales",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "revenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "inventory",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "counts",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "revenues",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(WinnerInfo)4664_storage": {
            "label": "struct Vortex.WinnerInfo",
            "members": [
              {
                "label": "drawing",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_enum(Rarity)4669",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "winner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c00c070089a4525213d32749ebd251c0980c6716c712e8ce5100da1f1812e373": {
      "address": "0xB3315253956E5608596a78eF6d9aa8D225350226",
      "txHash": "0x4b2d530cab4fc24b3bd85c45167eefc79c9571c0ece2ffb1cc69228990ecf986",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_creditClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:46"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:47"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4307_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:92"
          },
          {
            "label": "usdRedeemed",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:96"
          },
          {
            "label": "_blockTransfers",
            "offset": 0,
            "slot": "360",
            "type": "t_bool",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:97"
          },
          {
            "label": "BlockedAccounts",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:98"
          },
          {
            "label": "BlockedVaults",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:100"
          },
          {
            "label": "BurnList",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreditNFT)4285_storage": {
            "label": "struct CollectorCredit.CreditNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "activeBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(CreditNFTClass)4274_storage": {
            "label": "struct CollectorCredit.CreditNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GlobalData)4307_storage": {
            "label": "struct CollectorCredit.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "CreditNFTs",
                "type": "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "CreditNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CreditNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "951bd3966aeca01c44ba37384600a7a762eb0271000751e8573236da94acdc78": {
      "address": "0x72A13C7431570F3581972c4e1573b638C344F9a7",
      "txHash": "0x368ae58905422cc71828aef25e2e8ec9409cbdddab8934cba39a0d7df91912d6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_creditClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:46"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:47"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4307_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:92"
          },
          {
            "label": "usdRedeemed",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:96"
          },
          {
            "label": "_blockTransfers",
            "offset": 0,
            "slot": "360",
            "type": "t_bool",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:97"
          },
          {
            "label": "BlockedAccounts",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:98"
          },
          {
            "label": "BlockedVaults",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:100"
          },
          {
            "label": "BurnList",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreditNFT)4285_storage": {
            "label": "struct CollectorCredit.CreditNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "activeBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(CreditNFTClass)4274_storage": {
            "label": "struct CollectorCredit.CreditNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GlobalData)4307_storage": {
            "label": "struct CollectorCredit.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "CreditNFTs",
                "type": "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "CreditNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CreditNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "40a671c29a8466b37ecd1086adbbd9397f55b7d8560ea81be0943006940aedd8": {
      "address": "0xeEaD33C34097e9a620a89Bb549438dC3ae693Daa",
      "txHash": "0xf435e0014e026c920c19712bf6cf32ddfe035a4f611efcbe1a7f732ec6841a04",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_creditClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:46"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:47"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4307_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:92"
          },
          {
            "label": "usdRedeemed",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:96"
          },
          {
            "label": "_blockTransfers",
            "offset": 0,
            "slot": "360",
            "type": "t_bool",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:97"
          },
          {
            "label": "BlockedAccounts",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:98"
          },
          {
            "label": "BlockedVaults",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:100"
          },
          {
            "label": "BurnList",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreditNFT)4285_storage": {
            "label": "struct CollectorCredit.CreditNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "activeBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(CreditNFTClass)4274_storage": {
            "label": "struct CollectorCredit.CreditNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GlobalData)4307_storage": {
            "label": "struct CollectorCredit.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "CreditNFTs",
                "type": "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "CreditNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CreditNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8033df01de78af8658c28da4e75a9871bf49621faa53d7a54a7548296a39161b": {
      "address": "0xa4a07009726630c82811fF394f777A42D0883E0E",
      "txHash": "0x72763e725b279c1346fa2bc3f4923edf4baac9f37ee8f57bb33c459787e471c5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_creditClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:46"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:47"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4307_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:92"
          },
          {
            "label": "usdRedeemed",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:96"
          },
          {
            "label": "_blockTransfers",
            "offset": 0,
            "slot": "360",
            "type": "t_bool",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:97"
          },
          {
            "label": "BlockedAccounts",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:98"
          },
          {
            "label": "BlockedVaults",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:100"
          },
          {
            "label": "BurnList",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreditNFT)4285_storage": {
            "label": "struct CollectorCredit.CreditNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "activeBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(CreditNFTClass)4274_storage": {
            "label": "struct CollectorCredit.CreditNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GlobalData)4307_storage": {
            "label": "struct CollectorCredit.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "CreditNFTs",
                "type": "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "CreditNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CreditNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5d284a013642673f96c852c868effa22bc95c69bdc4dc2c3d2c52a32f96be676": {
      "address": "0x6fe32114Eb41564a5AcBbaa88a5371e4b8D31D3e",
      "txHash": "0xab76d0f442ddc872bb68a74870babda6071a3823ffbabc32c1601e78b8571f3c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:287"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f6bc2f3e13cd94d4449095b0d26fa3c4e3255bff10b1082749556a31ecd8e13b": {
      "address": "0xa25ab69A46CF82263cFe0A1c32629b3c552F8701",
      "txHash": "0xcd0f585409cb1380befe12240a3b1f5e3c31812569ffa5c5d9cdfe44f8f39b3e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:296"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "fbfb6306ae52c97e91276c826b532b8b1ddec46130e413a640b7bcf438e68748": {
      "address": "0xD84Bb83853d38B464faCb6dC84C682448C251713",
      "txHash": "0x283f58f5bdaa356b060d5877dc15cefecb7578dc2dba8a237040017783ab2026",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:330"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:330"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "65b50163aa4aea54bba795ff885c37652e067220247a626d39fb908048b9df1b": {
      "address": "0x7CaAeb71eb240EaE7bE5F42eDf96b60852a4ba5a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseInstanceId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)3248_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:58"
          },
          {
            "label": "_licenseTypeId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)3248_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:59"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalInfo)7699_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:89"
          },
          {
            "label": "mintRegistry",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)7707_storage)dyn_storage)",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "platformFeeBasisPoints",
            "offset": 0,
            "slot": "364",
            "type": "t_uint64",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          },
          {
            "label": "vibeContract",
            "offset": 8,
            "slot": "364",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(OwnedTokenInfo)7707_storage)dyn_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)7707_storage)dyn_storage)": {
            "label": "mapping(address => struct LicenseRegistry.OwnedTokenInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)7528_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInstanceInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseTypeInfo)7667_storage)": {
            "label": "mapping(uint256 => struct LicenseRegistry.LicenseTypeInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3248_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)7699_storage": {
            "label": "struct LicenseRegistry.GlobalInfo",
            "members": [
              {
                "label": "usdVtruExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collectorCreditContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creatorVaultFactoryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "studioAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenseTypes",
                "type": "t_mapping(t_uint256,t_struct(LicenseTypeInfo)7667_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licenseInstances",
                "type": "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)7528_storage)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseInstancesByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "allowBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "allowList",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(LicenseInstanceInfo)7528_storage": {
            "label": "struct ICreatorData.LicenseInstanceInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "licenseFeeCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "amountPaidCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseQuantity",
                "type": "t_uint64",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "platformBasisPoints",
                "type": "t_uint16",
                "offset": 8,
                "slot": "7"
              },
              {
                "label": "curatorBasisPoints",
                "type": "t_uint16",
                "offset": 10,
                "slot": "7"
              },
              {
                "label": "sellerBasisPoints",
                "type": "t_uint16",
                "offset": 12,
                "slot": "7"
              },
              {
                "label": "creatorRoyaltyBasisPoints",
                "type": "t_uint16",
                "offset": 14,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LicenseTypeInfo)7667_storage": {
            "label": "struct LicenseRegistry.LicenseTypeInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isMintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isElastic",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 3,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(OwnedTokenInfo)7707_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x7CaAeb71eb240EaE7bE5F42eDf96b60852a4ba5a",
        "0x389B989b5c7DC7B1E41587373b4FAA16415d3fB9"
      ]
    },
    "105551909c49b3ff9f50eaf8aa7da36047b3e80a924d7cdbcc7ab8c3a7efa45d": {
      "address": "0x5B50ea93658e28395751817d24975662BdE3268F",
      "txHash": "0x527b753b34093ddd82033514a136c8961f5983958e79e7b835e2993964722740",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7c6f06880b6e5134b78f196ebe6e109e321a001c5e1cf6e680d71b6676d9e553": {
      "address": "0xB119f06Fff52d75bE1D2d1c8a4eAfB13Ec4DCe08",
      "txHash": "0x94d5bb8552023b9c830fc054c0f667ca7e65603a1559375e618548b5fed4f9fa",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:376"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:376"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "6fb4e485d405fdcdb3f51dc015ee3fa9aba1c966ad78d521be907091f36bfe30": {
      "address": "0x8Fe14b9f06120FB0C4AA8B68aF90432C4e8b1964",
      "txHash": "0x7780041a71af3468cbd6098218785eb651728e1780ce819c37ff5deb679e1835",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:346"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:346"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "647e4ac9f72855817dd0374f0c8d6d7bac0dddc33a6ebbd10aa9582d29bf80d8": {
      "address": "0x08f8232BAE35b48598f0E153452c698C678217BE",
      "txHash": "0xd1901e09346f962fdae00642e8e1ba860afe6807d91af29a454165234c67f55b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:359"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:359"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "36db5981f091acd57ba7b5738fde3c935a3e5e81f1061082ca6aa6c805d6ffde": {
      "address": "0x041F0B003678bcC13cA0E2c3FC7BDef2D785b35a",
      "txHash": "0xe0849d1d5845ddf35e339134aa4b8d3cf375678015011b9d048a09cd1e75edb2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:363"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:363"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x041F0B003678bcC13cA0E2c3FC7BDef2D785b35a",
        "0xf1836804f92316cf7B5100b449aB21BEda6a1a1f"
      ]
    },
    "6db38bdffe90f9d6175041bce7f79b83786aa7c9aa8d5bbfa4b781bf71f8e264": {
      "address": "0x3f3547d183D22bD3F801E0077d644Ba772aa8c1b",
      "txHash": "0x7fd1bff9556a47efd5d62052f60e8947326441548b4c6c8c02335a4aa8ae2696",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "97f94fc56cd95312cf29358ca2302374fdb31b729d74a049254607f46d62fceb": {
      "address": "0x98371a57e69d0E5b734924852a8f61b31099792D",
      "txHash": "0x9a95a296a82fd2e40cfdcc6bd927c4b630ad283cbdb4425e3c95efdd8cf4e265",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "cf96a65a33d990ac2267fc21b4f16ed6cd6f15481fbc04c97dfd67466f975011": {
      "address": "0xA727D30674e7c15C79B14C88144c355a94B70339",
      "txHash": "0xeffcb656aa68e26d42d114c891da98e227e3ef9dd8f8911efbb332ccb29ce41f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "16f546cb42fa99c20c3ae034384981ae1eddde9abff29d6af6377b71a591028c": {
      "address": "0x13E813Fa69e2674aD442e9d3e9EEE60b8bDC42e5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1681_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:54"
          },
          {
            "label": "assetList",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Set)4666_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:55"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(GlobalInfo)3171_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CreatorInfo)4529_storage)dyn_storage": {
            "label": "struct ICreatorData.CreatorInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Source)4593": {
            "label": "enum ICreatorData.Source",
            "members": [
              "STUDIO",
              "SELF",
              "OTHER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Status)4589": {
            "label": "enum ICreatorData.Status",
            "members": [
              "DRAFT",
              "PREVIEW",
              "ACTIVE",
              "HIDDEN",
              "BLOCKED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4508_storage)": {
            "label": "mapping(string => struct ICreatorData.AssetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInfo)4556_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)4508_storage": {
            "label": "struct ICreatorData.AssetInfo",
            "members": [
              {
                "label": "key",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "core",
                "type": "t_struct(CoreInfo)4524_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_struct(CreatorInfo)4529_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "collaborators",
                "type": "t_array(t_struct(CreatorInfo)4529_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "licenses",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4589",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "originator",
                "type": "t_enum(Source)4593",
                "offset": 1,
                "slot": "11"
              },
              {
                "label": "editor",
                "type": "t_address",
                "offset": 2,
                "slot": "11"
              },
              {
                "label": "isPremium",
                "type": "t_bool",
                "offset": 22,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(CoreInfo)4524_storage": {
            "label": "struct ICreatorData.CoreInfo",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "mediaItems",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4589",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)1681_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreatorInfo)4529_storage": {
            "label": "struct ICreatorData.CreatorInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "split",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalInfo)3171_storage": {
            "label": "struct AssetRegistry.GlobalInfo",
            "members": [
              {
                "label": "assetsConsigned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "premiumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creatorCreditsRequired",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "assets",
                "type": "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4508_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenses",
                "type": "t_mapping(t_uint256,t_struct(LicenseInfo)4556_storage)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(LicenseInfo)4556_storage": {
            "label": "struct ICreatorData.LicenseInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "licenseTypeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "editions",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "editionCents",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "discountEditions",
                "type": "t_uint64",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "discountBasisPoints",
                "type": "t_uint64",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "discountMaxBasisPoints",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "available",
                "type": "t_uint64",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "code",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4666_storage": {
            "label": "struct UnorderedStringKeySetLib.Set",
            "members": [
              {
                "label": "keyPointers",
                "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "keyList",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "af40b3a282e4ffae68108f690f01d41fe497d8e579d8545032b1f2ea8438e858": {
      "address": "0x97e64Aee3853484D1F6B240894A5398aaC447373",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(GlobalInfo)7191_storage",
            "contract": "MediaRegistry",
            "src": "contracts/MediaRegistry.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_string_storage))": {
            "label": "mapping(string => mapping(string => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)7191_storage": {
            "label": "struct MediaRegistry.GlobalInfo",
            "members": [
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "media",
                "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_string_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mediaList",
                "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7360e614e97ed61bf397ffdbca1ad2753299022be368092ef79e8e0394877be0": {
      "address": "0x7aea4a32df743644474e62Bc38E7D6D0C00Af365",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "301",
            "type": "t_struct(Counter)3248_storage",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:56"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(GlobalData)5846_storage",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:65"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)5838_storage)",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:66"
          },
          {
            "label": "lastDepositBlockNumber",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:68"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "307",
            "type": "t_bool",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:70"
          },
          {
            "label": "isBlocked",
            "offset": 1,
            "slot": "307",
            "type": "t_bool",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)5838_storage)": {
            "label": "mapping(uint256 => struct CreatorVault.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3248_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)5846_storage": {
            "label": "struct CreatorVault.GlobalData",
            "members": [
              {
                "label": "creatorCredits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "wallets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenInfo)5838_storage": {
            "label": "struct CreatorVault.TokenInfo",
            "members": [
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "licenseInstanceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "087bcf8892e52833995d8cba5dffac5b4ede95e6ae95f21fc3f17479b060eef7": {
      "address": "0x1eB8D3c7C80dD4785d7031d7e3B106aFFb89DC5f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:64"
          },
          {
            "label": "pairAddress",
            "offset": 1,
            "slot": "351",
            "type": "t_address",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:64"
          },
          {
            "label": "totalWrapped",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:65"
          },
          {
            "label": "totalEpochWrapped",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:66"
          },
          {
            "label": "totalEpochResetBlock",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:66"
          },
          {
            "label": "userWrappedLastBlock",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:69"
          },
          {
            "label": "priceByEpoch",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:72"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "38601b2fad6e7227a2fca88c32e3640eca495c2227a0c1337a991f3c78618e12": {
      "address": "0x1aC214cd242BB1eBeA5FCBf53Aa05962e7096CA9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "poolContract",
            "offset": 0,
            "slot": "401",
            "type": "t_address",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:64"
          },
          {
            "label": "totalPoolRevenue",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:65"
          },
          {
            "label": "DENOMINATIONS",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:84"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "404",
            "type": "t_struct(GlobalData)7148_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          },
          {
            "label": "stakeQuota",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VibeNFT)7130_storage)": {
            "label": "mapping(uint256 => struct VIBE.VibeNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)7148_storage": {
            "label": "struct VIBE.GlobalData",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(VibeNFT)7130_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denominationCounts",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "issuedShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimedRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VibeNFT)7130_storage": {
            "label": "struct VIBE.VibeNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denomination",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "cf074cb0ff1f2f18ead2feb3c41509da44b6cbb99794beab8a5d50bd2731ec3d": {
      "address": "0x1b803E5347A16498F0885F4EBe960735886C429b",
      "txHash": "0x140e9010f665f2906f513ab74c286b7947ebd4fa59d63ec8d988e7271414dd65",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseInstanceId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)3248_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:58"
          },
          {
            "label": "_licenseTypeId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)3248_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:59"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalInfo)8883_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:89"
          },
          {
            "label": "mintRegistry",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)8891_storage)dyn_storage)",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "platformFeeBasisPoints",
            "offset": 0,
            "slot": "364",
            "type": "t_uint64",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          },
          {
            "label": "vibeContract",
            "offset": 8,
            "slot": "364",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(OwnedTokenInfo)8891_storage)dyn_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)8891_storage)dyn_storage)": {
            "label": "mapping(address => struct LicenseRegistry.OwnedTokenInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)8712_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInstanceInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseTypeInfo)8851_storage)": {
            "label": "mapping(uint256 => struct LicenseRegistry.LicenseTypeInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3248_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)8883_storage": {
            "label": "struct LicenseRegistry.GlobalInfo",
            "members": [
              {
                "label": "usdVtruExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collectorCreditContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creatorVaultFactoryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "studioAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenseTypes",
                "type": "t_mapping(t_uint256,t_struct(LicenseTypeInfo)8851_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licenseInstances",
                "type": "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)8712_storage)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseInstancesByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "allowBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "allowList",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(LicenseInstanceInfo)8712_storage": {
            "label": "struct ICreatorData.LicenseInstanceInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "licenseFeeCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "amountPaidCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseQuantity",
                "type": "t_uint64",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "platformBasisPoints",
                "type": "t_uint16",
                "offset": 8,
                "slot": "7"
              },
              {
                "label": "curatorBasisPoints",
                "type": "t_uint16",
                "offset": 10,
                "slot": "7"
              },
              {
                "label": "sellerBasisPoints",
                "type": "t_uint16",
                "offset": 12,
                "slot": "7"
              },
              {
                "label": "creatorRoyaltyBasisPoints",
                "type": "t_uint16",
                "offset": 14,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LicenseTypeInfo)8851_storage": {
            "label": "struct LicenseRegistry.LicenseTypeInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isMintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isElastic",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 3,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(OwnedTokenInfo)8891_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ef42424661b66fccefa8db6ce7a9d0caa59b0092129fabdd687dede3396fe1a2": {
      "address": "0x30D4e9D0595aE471A79EE2C780AC0Fdd4598B7B4",
      "txHash": "0x86c8d14bf1597cc17a54dc3786c1eca05643d5ca9711cd85ec87181c98eea11d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseInstanceId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:58"
          },
          {
            "label": "_licenseTypeId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:59"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalInfo)3638_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:89"
          },
          {
            "label": "mintRegistry",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage)",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "platformFeeBasisPoints",
            "offset": 0,
            "slot": "364",
            "type": "t_uint64",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          },
          {
            "label": "vibeContract",
            "offset": 8,
            "slot": "364",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage)": {
            "label": "mapping(address => struct LicenseRegistry.OwnedTokenInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInstanceInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3606_storage)": {
            "label": "mapping(uint256 => struct LicenseRegistry.LicenseTypeInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1728_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)3638_storage": {
            "label": "struct LicenseRegistry.GlobalInfo",
            "members": [
              {
                "label": "usdVtruExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collectorCreditContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creatorVaultFactoryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "studioAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenseTypes",
                "type": "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3606_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licenseInstances",
                "type": "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseInstancesByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "allowBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "allowList",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(LicenseInstanceInfo)3467_storage": {
            "label": "struct ICreatorData.LicenseInstanceInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "licenseFeeCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "amountPaidCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseQuantity",
                "type": "t_uint64",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "platformBasisPoints",
                "type": "t_uint16",
                "offset": 8,
                "slot": "7"
              },
              {
                "label": "curatorBasisPoints",
                "type": "t_uint16",
                "offset": 10,
                "slot": "7"
              },
              {
                "label": "sellerBasisPoints",
                "type": "t_uint16",
                "offset": 12,
                "slot": "7"
              },
              {
                "label": "creatorRoyaltyBasisPoints",
                "type": "t_uint16",
                "offset": 14,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LicenseTypeInfo)3606_storage": {
            "label": "struct LicenseRegistry.LicenseTypeInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isMintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isElastic",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 3,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(OwnedTokenInfo)3646_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "39e8e329bee0f223876c107d863dcb6dea5897d22baff17718006da3bdb6016e": {
      "address": "0x3330f7c65536C8e2Caf95C9D3fb413A4E1Fe059A",
      "txHash": "0xe1e5de61f3ee53f5906b244255c9e95c3d379b17451e55e620c1f8ac291666d7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseInstanceId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:58"
          },
          {
            "label": "_licenseTypeId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:59"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalInfo)3638_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:90"
          },
          {
            "label": "mintRegistry",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage)",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "platformFeeBasisPoints",
            "offset": 0,
            "slot": "364",
            "type": "t_uint64",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "vibeContract",
            "offset": 8,
            "slot": "364",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          },
          {
            "label": "vusdContract",
            "offset": 0,
            "slot": "365",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage)": {
            "label": "mapping(address => struct LicenseRegistry.OwnedTokenInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInstanceInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3606_storage)": {
            "label": "mapping(uint256 => struct LicenseRegistry.LicenseTypeInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1728_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)3638_storage": {
            "label": "struct LicenseRegistry.GlobalInfo",
            "members": [
              {
                "label": "usdVtruExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collectorCreditContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creatorVaultFactoryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "studioAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenseTypes",
                "type": "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3606_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licenseInstances",
                "type": "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseInstancesByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "allowBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "allowList",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(LicenseInstanceInfo)3467_storage": {
            "label": "struct ICreatorData.LicenseInstanceInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "licenseFeeCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "amountPaidCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseQuantity",
                "type": "t_uint64",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "platformBasisPoints",
                "type": "t_uint16",
                "offset": 8,
                "slot": "7"
              },
              {
                "label": "curatorBasisPoints",
                "type": "t_uint16",
                "offset": 10,
                "slot": "7"
              },
              {
                "label": "sellerBasisPoints",
                "type": "t_uint16",
                "offset": 12,
                "slot": "7"
              },
              {
                "label": "creatorRoyaltyBasisPoints",
                "type": "t_uint16",
                "offset": 14,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LicenseTypeInfo)3606_storage": {
            "label": "struct LicenseRegistry.LicenseTypeInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isMintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isElastic",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 3,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(OwnedTokenInfo)3646_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "da68ba15509c48338c246157ecf5274a081a1aff9cdc92b3e3782e6e8835b1b4": {
      "address": "0xE900b1f2094bFc60290283bdf650Ab018AA28a26",
      "txHash": "0x18521f6113a19b428775d8147fdbd42bb06c84c281b93117dba10f7d29f20a58",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20)4559",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:47"
          },
          {
            "label": "total",
            "offset": 0,
            "slot": "402",
            "type": "t_struct(Total)4624_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:81"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "417",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "glyphInfo",
            "offset": 0,
            "slot": "418",
            "type": "t_mapping(t_uint256,t_struct(GlyphInfo)4636_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "tokenGlyph",
            "offset": 0,
            "slot": "419",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "glyphToTokenIds",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "tokenIndexInGlyph",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "tokenRarity",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_enum(Rarity)4669)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "rarityToTokenIds",
            "offset": 0,
            "slot": "423",
            "type": "t_mapping(t_enum(Rarity)4669,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "tokenIndexInRarity",
            "offset": 0,
            "slot": "424",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "glyphCodes",
            "offset": 0,
            "slot": "425",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "426",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarityChances",
            "offset": 0,
            "slot": "427",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "raritySwapRatios",
            "offset": 0,
            "slot": "428",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdrops",
            "offset": 0,
            "slot": "429",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdropResults",
            "offset": 0,
            "slot": "430",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:109"
          },
          {
            "label": "airdropWinners",
            "offset": 0,
            "slot": "431",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:111"
          },
          {
            "label": "_airdrops",
            "offset": 0,
            "slot": "432",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:114"
          },
          {
            "label": "_airdropResults",
            "offset": 0,
            "slot": "433",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:118"
          },
          {
            "label": "_airdropWinners",
            "offset": 0,
            "slot": "434",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:119"
          },
          {
            "label": "threshold",
            "offset": 0,
            "slot": "435",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:121"
          },
          {
            "label": "totalVibes",
            "offset": 0,
            "slot": "436",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:123"
          },
          {
            "label": "currentVibesInInterval",
            "offset": 0,
            "slot": "437",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:125"
          },
          {
            "label": "intervalStartMint",
            "offset": 0,
            "slot": "438",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:128"
          },
          {
            "label": "vibeTokens",
            "offset": 0,
            "slot": "439",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WinnerInfo)4664_storage)dyn_storage": {
            "label": "struct Vortex.WinnerInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)4_storage": {
            "label": "uint8[4]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4559": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(Rarity)4669": {
            "label": "enum Vortex.Rarity",
            "members": [
              "Common",
              "Rare",
              "Ultra",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_uint256)": {
            "label": "mapping(enum Vortex.Rarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(Rarity)4669)": {
            "label": "mapping(uint256 => enum Vortex.Rarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GlyphInfo)4636_storage)": {
            "label": "mapping(uint256 => struct Vortex.GlyphInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlyphInfo)4636_storage": {
            "label": "struct Vortex.GlyphInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "glyph",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "code",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Total)4624_storage": {
            "label": "struct Vortex.Total",
            "members": [
              {
                "label": "sales",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "revenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "inventory",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "counts",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "revenues",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(WinnerInfo)4664_storage": {
            "label": "struct Vortex.WinnerInfo",
            "members": [
              {
                "label": "drawing",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_enum(Rarity)4669",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "winner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7f8e47363d583f113c5d616405cf4933df3a481a38d66bdb8e8e30e984c6add0": {
      "address": "0x7EC3889A321447F4c6123dC2E8126B5828435376",
      "txHash": "0x4ddc846578c01fd033c7b87336c401d55a29c3966e2afadfed683b3c90611b0c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20)4559",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:47"
          },
          {
            "label": "total",
            "offset": 0,
            "slot": "402",
            "type": "t_struct(Total)4624_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:81"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "417",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "glyphInfo",
            "offset": 0,
            "slot": "418",
            "type": "t_mapping(t_uint256,t_struct(GlyphInfo)4636_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "tokenGlyph",
            "offset": 0,
            "slot": "419",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "glyphToTokenIds",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "tokenIndexInGlyph",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "tokenRarity",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_enum(Rarity)4669)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "rarityToTokenIds",
            "offset": 0,
            "slot": "423",
            "type": "t_mapping(t_enum(Rarity)4669,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "tokenIndexInRarity",
            "offset": 0,
            "slot": "424",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "glyphCodes",
            "offset": 0,
            "slot": "425",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "426",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarityChances",
            "offset": 0,
            "slot": "427",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "raritySwapRatios",
            "offset": 0,
            "slot": "428",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdrops",
            "offset": 0,
            "slot": "429",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdropResults",
            "offset": 0,
            "slot": "430",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:109"
          },
          {
            "label": "airdropWinners",
            "offset": 0,
            "slot": "431",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:111"
          },
          {
            "label": "_airdrops",
            "offset": 0,
            "slot": "432",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:114"
          },
          {
            "label": "_airdropResults",
            "offset": 0,
            "slot": "433",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:118"
          },
          {
            "label": "_airdropWinners",
            "offset": 0,
            "slot": "434",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:119"
          },
          {
            "label": "threshold",
            "offset": 0,
            "slot": "435",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:121"
          },
          {
            "label": "totalVibes",
            "offset": 0,
            "slot": "436",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:123"
          },
          {
            "label": "currentVibesInInterval",
            "offset": 0,
            "slot": "437",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:125"
          },
          {
            "label": "intervalStartMint",
            "offset": 0,
            "slot": "438",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:128"
          },
          {
            "label": "vibeTokens",
            "offset": 0,
            "slot": "439",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WinnerInfo)4664_storage)dyn_storage": {
            "label": "struct Vortex.WinnerInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)4_storage": {
            "label": "uint8[4]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4559": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(Rarity)4669": {
            "label": "enum Vortex.Rarity",
            "members": [
              "Common",
              "Rare",
              "Ultra",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)4669,t_uint256)": {
            "label": "mapping(enum Vortex.Rarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(Rarity)4669)": {
            "label": "mapping(uint256 => enum Vortex.Rarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_array(t_struct(WinnerInfo)4664_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)4669,t_uint256))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GlyphInfo)4636_storage)": {
            "label": "mapping(uint256 => struct Vortex.GlyphInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlyphInfo)4636_storage": {
            "label": "struct Vortex.GlyphInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "glyph",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "code",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Total)4624_storage": {
            "label": "struct Vortex.Total",
            "members": [
              {
                "label": "sales",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "revenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "inventory",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "counts",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "revenues",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(WinnerInfo)4664_storage": {
            "label": "struct Vortex.WinnerInfo",
            "members": [
              {
                "label": "drawing",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_enum(Rarity)4669",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "winner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b62519cca1765d23788f5bfd8dace5beb4a175cf9392257e2e0da80e3a0f7e46": {
      "address": "0x5ed87864d7C5Bda423E51d007E4A985dF10130FC",
      "txHash": "0x85e76553b48cbeed6bdb9d6ea7af1541e85def14227a522a6b6ac491e4fb3558",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3398",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3204",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3467",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3493_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3493_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:57"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3204": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3467": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3398": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3493_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3493_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3493_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3493_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b434794ab5faf759f19288890d61f25a9e4e61dcc8c83445157838245db5bc9b": {
      "address": "0x2878208Cb711a875c82511A83735B462D2527076",
      "txHash": "0x13710d80a104ac1e888e721394579b1318d3296f4feafd773b274c40952f6c93",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:376"
          },
          {
            "label": "fallbackVtruPrice",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:376"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1d5b8f4cf1a8372a1c016145150738554ed2075f4096a553783073762448627c": {
      "address": "0x4645f34a05823956E5c7E7e5dcA90c2882bE2A41",
      "txHash": "0x1efbaf932799655d3ccd12a886d7922e688e2bf56bea6f31e392749af25694eb",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3715_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:74"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:79"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:80"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:374"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:380"
          },
          {
            "label": "fallbackVtruPrice",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:380"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3715_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3715_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ab8426314f064ceac0181328e0357b4d1c0f200f2d35bc7693774b8666310579": {
      "address": "0x0dDEa5fc27A98009035aD057474c5D69E4dDEf91",
      "txHash": "0x42ca55cbc5f6be1a19439b61d7464d7a2224f6b3f49e42380c1855ff9de4df4c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1681_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:54"
          },
          {
            "label": "assetList",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Set)4692_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:55"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(GlobalInfo)3171_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CreatorInfo)4555_storage)dyn_storage": {
            "label": "struct ICreatorData.CreatorInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Source)4619": {
            "label": "enum ICreatorData.Source",
            "members": [
              "STUDIO",
              "SELF",
              "OTHER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Status)4615": {
            "label": "enum ICreatorData.Status",
            "members": [
              "DRAFT",
              "PREVIEW",
              "ACTIVE",
              "HIDDEN",
              "BLOCKED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4534_storage)": {
            "label": "mapping(string => struct ICreatorData.AssetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInfo)4582_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)4534_storage": {
            "label": "struct ICreatorData.AssetInfo",
            "members": [
              {
                "label": "key",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "core",
                "type": "t_struct(CoreInfo)4550_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_struct(CreatorInfo)4555_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "collaborators",
                "type": "t_array(t_struct(CreatorInfo)4555_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "licenses",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4615",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "originator",
                "type": "t_enum(Source)4619",
                "offset": 1,
                "slot": "11"
              },
              {
                "label": "editor",
                "type": "t_address",
                "offset": 2,
                "slot": "11"
              },
              {
                "label": "isPremium",
                "type": "t_bool",
                "offset": 22,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(CoreInfo)4550_storage": {
            "label": "struct ICreatorData.CoreInfo",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "mediaItems",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4615",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)1681_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreatorInfo)4555_storage": {
            "label": "struct ICreatorData.CreatorInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "split",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalInfo)3171_storage": {
            "label": "struct AssetRegistry.GlobalInfo",
            "members": [
              {
                "label": "assetsConsigned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "premiumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creatorCreditsRequired",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "assets",
                "type": "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4534_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenses",
                "type": "t_mapping(t_uint256,t_struct(LicenseInfo)4582_storage)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(LicenseInfo)4582_storage": {
            "label": "struct ICreatorData.LicenseInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "licenseTypeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "editions",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "editionCents",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "discountEditions",
                "type": "t_uint64",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "discountBasisPoints",
                "type": "t_uint64",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "discountMaxBasisPoints",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "available",
                "type": "t_uint64",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "code",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4692_storage": {
            "label": "struct UnorderedStringKeySetLib.Set",
            "members": [
              {
                "label": "keyPointers",
                "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "keyList",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f99d7a772fd486b9a62d32e39be17e63f0ca53fd7e2c6fd225cd53930efcc37d": {
      "address": "0x723eaf189cc5cc708a0693ee660a646437DB5bE9",
      "txHash": "0x65ef12ff6bc8647ea8e06cef3d5f52de3ab5dd93a6d8c1d4a4e6ec09e926e244",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1681_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:54"
          },
          {
            "label": "assetList",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Set)4692_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:55"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(GlobalInfo)3171_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CreatorInfo)4555_storage)dyn_storage": {
            "label": "struct ICreatorData.CreatorInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Source)4619": {
            "label": "enum ICreatorData.Source",
            "members": [
              "STUDIO",
              "SELF",
              "OTHER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Status)4615": {
            "label": "enum ICreatorData.Status",
            "members": [
              "DRAFT",
              "PREVIEW",
              "ACTIVE",
              "HIDDEN",
              "BLOCKED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4534_storage)": {
            "label": "mapping(string => struct ICreatorData.AssetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInfo)4582_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)4534_storage": {
            "label": "struct ICreatorData.AssetInfo",
            "members": [
              {
                "label": "key",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "core",
                "type": "t_struct(CoreInfo)4550_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_struct(CreatorInfo)4555_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "collaborators",
                "type": "t_array(t_struct(CreatorInfo)4555_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "licenses",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4615",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "originator",
                "type": "t_enum(Source)4619",
                "offset": 1,
                "slot": "11"
              },
              {
                "label": "editor",
                "type": "t_address",
                "offset": 2,
                "slot": "11"
              },
              {
                "label": "isPremium",
                "type": "t_bool",
                "offset": 22,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(CoreInfo)4550_storage": {
            "label": "struct ICreatorData.CoreInfo",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "mediaItems",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4615",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)1681_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreatorInfo)4555_storage": {
            "label": "struct ICreatorData.CreatorInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "split",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalInfo)3171_storage": {
            "label": "struct AssetRegistry.GlobalInfo",
            "members": [
              {
                "label": "assetsConsigned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "premiumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creatorCreditsRequired",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "assets",
                "type": "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4534_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenses",
                "type": "t_mapping(t_uint256,t_struct(LicenseInfo)4582_storage)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(LicenseInfo)4582_storage": {
            "label": "struct ICreatorData.LicenseInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "licenseTypeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "editions",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "editionCents",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "discountEditions",
                "type": "t_uint64",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "discountBasisPoints",
                "type": "t_uint64",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "discountMaxBasisPoints",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "available",
                "type": "t_uint64",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "code",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4692_storage": {
            "label": "struct UnorderedStringKeySetLib.Set",
            "members": [
              {
                "label": "keyPointers",
                "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "keyList",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "25cbc06241d4c1a76ee29fd80bec952cbb689ad2608f0c86b104313a87f36fed": {
      "address": "0x6d4C54D69F590830DD3ae26736EC07A272561d33",
      "txHash": "0xb6228884c13d0266190caa5a5daae2e158bb4e9c7403e55a33a28278cc7a8a31",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_coreClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)3248_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:78"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)3248_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:80"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)5304_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:159"
          },
          {
            "label": "BLOCKS_IN_MONTH",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "totalCurrentDepositBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "boosterContract",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(VitruveoBoosterNFT)5146",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:163"
          },
          {
            "label": "lastItem",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:525"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_array(t_struct(StakeInfo)6935_storage)dyn_storage)",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:676"
          },
          {
            "label": "stakeUnlockedTotal",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:680"
          },
          {
            "label": "stakeLockedTotal",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:680"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeInfo)6935_storage)dyn_storage": {
            "label": "struct CoreVestV2.StakeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VitruveoBoosterNFT)5146": {
            "label": "contract VitruveoBoosterNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(StakeInfo)6935_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreVestV2.StakeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFT)5278_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFTClass)5245_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CoreNFT)5278_storage": {
            "label": "struct CoreVestV2.CoreNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "grantBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "grantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "unlockBasisPoints",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voteCredits",
                "type": "t_uint16",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "lockMonths",
                "type": "t_uint16",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "vestingMonths",
                "type": "t_uint16",
                "offset": 6,
                "slot": "5"
              },
              {
                "label": "claimedGrantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRebaseAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "boosts",
                "type": "t_uint16",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "boostBasisPoints",
                "type": "t_uint16",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "isRevocable",
                "type": "t_bool",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "isRevoked",
                "type": "t_bool",
                "offset": 5,
                "slot": "8"
              },
              {
                "label": "isKyc",
                "type": "t_bool",
                "offset": 6,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CoreNFTClass)5245_storage": {
            "label": "struct CoreVestV2.CoreNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isTransferable",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allowMultiple",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "totalGrants",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)3248_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)5304_storage": {
            "label": "struct CoreVestV2.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDepositBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "boosts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CoreNFTs",
                "type": "t_mapping(t_uint256,t_struct(CoreNFT)5278_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "CoreNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CoreNFTClass)5245_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "CoreNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)6935_storage": {
            "label": "struct CoreVestV2.StakeInfo",
            "members": [
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x6d4C54D69F590830DD3ae26736EC07A272561d33",
        "0xA557893bD8530271FEa7ED0c6618Ccff33f14e03"
      ]
    },
    "38064a742113d23615c3321c8c96e23b361f696fb97d75c4bba47f230ea09e87": {
      "address": "0x9a27ea9297893460121A07ea120833FEEd366702",
      "txHash": "0xe4baf4f01eb62236073fc757f9542bc97f0f0591e8a97d32e37a9e2185d6bf6f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "401",
            "type": "t_contract(IERC20)4761",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:47"
          },
          {
            "label": "total",
            "offset": 0,
            "slot": "402",
            "type": "t_struct(Total)8792_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:81"
          },
          {
            "label": "lastClaimed",
            "offset": 0,
            "slot": "417",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "glyphInfo",
            "offset": 0,
            "slot": "418",
            "type": "t_mapping(t_uint256,t_struct(GlyphInfo)8804_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:99"
          },
          {
            "label": "tokenGlyph",
            "offset": 0,
            "slot": "419",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "glyphToTokenIds",
            "offset": 0,
            "slot": "420",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:100"
          },
          {
            "label": "tokenIndexInGlyph",
            "offset": 0,
            "slot": "421",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "tokenRarity",
            "offset": 0,
            "slot": "422",
            "type": "t_mapping(t_uint256,t_enum(Rarity)8837)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:101"
          },
          {
            "label": "rarityToTokenIds",
            "offset": 0,
            "slot": "423",
            "type": "t_mapping(t_enum(Rarity)8837,t_array(t_uint256)dyn_storage)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "tokenIndexInRarity",
            "offset": 0,
            "slot": "424",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:104"
          },
          {
            "label": "glyphCodes",
            "offset": 0,
            "slot": "425",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "426",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "rarityChances",
            "offset": 0,
            "slot": "427",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:105"
          },
          {
            "label": "raritySwapRatios",
            "offset": 0,
            "slot": "428",
            "type": "t_array(t_uint8)4_storage",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdrops",
            "offset": 0,
            "slot": "429",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)8837,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:106"
          },
          {
            "label": "airdropResults",
            "offset": 0,
            "slot": "430",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)8837,t_array(t_struct(WinnerInfo)8832_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:109"
          },
          {
            "label": "airdropWinners",
            "offset": 0,
            "slot": "431",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:111"
          },
          {
            "label": "_airdrops",
            "offset": 0,
            "slot": "432",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)8837,t_uint256))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:114"
          },
          {
            "label": "_airdropResults",
            "offset": 0,
            "slot": "433",
            "type": "t_mapping(t_uint256,t_mapping(t_enum(Rarity)8837,t_array(t_struct(WinnerInfo)8832_storage)dyn_storage))",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:118"
          },
          {
            "label": "_airdropWinners",
            "offset": 0,
            "slot": "434",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:119"
          },
          {
            "label": "threshold",
            "offset": 0,
            "slot": "435",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:121"
          },
          {
            "label": "totalVibes",
            "offset": 0,
            "slot": "436",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:123"
          },
          {
            "label": "currentVibesInInterval",
            "offset": 0,
            "slot": "437",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:125"
          },
          {
            "label": "intervalStartMint",
            "offset": 0,
            "slot": "438",
            "type": "t_uint256",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:128"
          },
          {
            "label": "vibeTokens",
            "offset": 0,
            "slot": "439",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "Vortex",
            "src": "contracts/Vortex.sol:130"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WinnerInfo)8832_storage)dyn_storage": {
            "label": "struct Vortex.WinnerInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint8)4_storage": {
            "label": "uint8[4]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4761": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(Rarity)8837": {
            "label": "enum Vortex.Rarity",
            "members": [
              "Common",
              "Rare",
              "Ultra",
              "Epic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)8837,t_array(t_struct(WinnerInfo)8832_storage)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)8837,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(enum Vortex.Rarity => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Rarity)8837,t_uint256)": {
            "label": "mapping(enum Vortex.Rarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(Rarity)8837)": {
            "label": "mapping(uint256 => enum Vortex.Rarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)8837,t_array(t_struct(WinnerInfo)8832_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => struct Vortex.WinnerInfo[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_enum(Rarity)8837,t_uint256))": {
            "label": "mapping(uint256 => mapping(enum Vortex.Rarity => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GlyphInfo)8804_storage)": {
            "label": "mapping(uint256 => struct Vortex.GlyphInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlyphInfo)8804_storage": {
            "label": "struct Vortex.GlyphInfo",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "glyph",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "code",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Total)8792_storage": {
            "label": "struct Vortex.Total",
            "members": [
              {
                "label": "sales",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokensSold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "revenue",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "inventory",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "counts",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "revenues",
                "type": "t_array(t_uint256)4_storage",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(WinnerInfo)8832_storage": {
            "label": "struct Vortex.WinnerInfo",
            "members": [
              {
                "label": "drawing",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rarity",
                "type": "t_enum(Rarity)8837",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "winner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d6ecfeb022fe592af5de642866d6fa262be136463e77b63fc51d0fde53c1db4b": {
      "address": "0x17C8eBA1da739A0BeD9e2c3CF469D57CdA969d15",
      "txHash": "0x58eb43b343059612a6e8802e7d3a8654b730faf1a797dcd081de1d57b5ba9ee4",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7726ee8d940b48f21ef9b7976a519998916f358d0194f0a4251f0943682f63e7": {
      "address": "0xACDfD4e77c628F9A370c89aE20766038ec502E2a",
      "txHash": "0x3dd78adc38b0b04bfdba3335dbd58752c823874081e7f130fbb4ef64643ad48b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f884554829cfcd5acd98cd1dc9a020e7f6217718bd78c7ec77d8e34075d270a8": {
      "address": "0x3A77361dd731A9192A7f4656BcBB904e08c1c687",
      "txHash": "0x9accc4950977d09b4169d537ec02a2c899c9cb4e90abd2b8f2973079b02cb950",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "6c8dd4f2f5e693c095a95f94593ccf1d02aaf0f542ddfbc3e7ff90e61d963dd2": {
      "address": "0x98b76A752cdbB652EBF8805AC25E507b58F922F7",
      "txHash": "0x418fdef4c6c0e4cc42b6dcf6763f45167641350fae97c4b73ff30455c0deba69",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "6ac5978cade0bb3808cc7995171bdccf2892be554361831a41d24225b8f900e1": {
      "address": "0x8e0EF60876B140Ad1c2C35134D56eE2bB3dE5338",
      "txHash": "0xa538629253619506133cd455f05917a62ee60c3fd1fbf2331ede5dd85f5f6684",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "274226f0f649341427b45b6dfdd7127154a976b5cc2828b8625a90cc085d6487": {
      "address": "0xE17854d89FF7A02b7e2db84410CA58568f6a0CB5",
      "txHash": "0x8d35ccbb980424a328e089bb3eab338b0a03daeae47ccd12c5435d19976453a1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9f1a61017589c076817a063cd927b876c28c2567d100bb3ce8d7ac41146bfc69": {
      "address": "0x262ef69b0049a23d72e6B296dFA13a03A7cCEb45",
      "txHash": "0xd63a118e56582e086b94b82132d2fd70e83a673fcfd1a7fe797b964fcd0c37e3",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "cde4b3074bac8abd7c8abe94e4c51c741d1d83492d7522403792d64ff68447ee": {
      "address": "0x904773DB44b96F62ea94004Db115ea8e41E63d34",
      "txHash": "0x4b74beb322caa02286eb13e5a02230461a3708bf63688909cae47f75da49491b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:74"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "cdcb80344fa325cd4455ab451fbe5ca6acfd75efdb9e4b18f25e6dde91201b04": {
      "address": "0x5e51b931A12A8cfBc268b9291c3C110C290ca4d9",
      "txHash": "0xd5bd8b7a1e85d6847ca118b8f0c550b2ba34e098b511faec0647aa405aa52e07",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:75"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:76"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:76"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:79"
          },
          {
            "label": "bonusTxCount",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "01563361dcd157e2d3e8d21974d176295a8b29b957ee75201fa44d7fcbe2144d": {
      "address": "0x2BF3FD18f898284cA4400817191744144ec487aF",
      "txHash": "0xa385bac1cf0278f99dcecacc85153e58fee1812c3bff8b73d84b1fff688612a8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:76"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:80"
          },
          {
            "label": "bonusTxCount",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "437c3b08f05d9427d3d6ad78c264b31ebc04ce85d4a8b91fc120dd0908eb730b": {
      "address": "0x419302320f185a337705802fD65Fb1F50Ac0A3A3",
      "txHash": "0x39134ff1ccb976bacf93cdaaee61eb030122938b7ff3a7d8592b23a84ce11751",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:76"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:80"
          },
          {
            "label": "bonusTxCount",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d1199faccd480b694d8520d30f472942316129f974c7e963ebbc0fc2ecfcb180": {
      "address": "0x41C4b1ee7953039f0Eb5E8528E2F06AF22593F22",
      "txHash": "0x0234aaca4038f8d21aa7cb80753c6bd439449392a2876ce8c4bad99e32786fbe",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:76"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:80"
          },
          {
            "label": "bonusTxCount",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "dd61372462f509fb65176eda63c08659dd19625481450676d913d3fe75d12040": {
      "address": "0x42f0aDc301692A9fdaD041f286B9bd1A139678c4",
      "txHash": "0x85d384f1f15311c38adfe9cc2a4819d0a6c05f54718e185f865e0f78098abddf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "poolContract",
            "offset": 0,
            "slot": "401",
            "type": "t_address",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:64"
          },
          {
            "label": "totalPoolRevenue",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:65"
          },
          {
            "label": "DENOMINATIONS",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:84"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "404",
            "type": "t_struct(GlobalData)4574_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:84"
          },
          {
            "label": "stakeQuota",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)": {
            "label": "mapping(uint256 => struct VIBE.VibeNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4574_storage": {
            "label": "struct VIBE.GlobalData",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denominationCounts",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "issuedShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimedRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VibeNFT)4556_storage": {
            "label": "struct VIBE.VibeNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denomination",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "940ec66d6547bd03eb26c595e3827b1f769d6849ecc6c38314588ebba63a71d0": {
      "address": "0xc2054b92376f44BAB5d43386E2899C9CA2Fa364D",
      "txHash": "0xee9552173ddfaca8768a42e0aff161c2273db31a30337ae45ca99e9ffc817cd2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "poolContract",
            "offset": 0,
            "slot": "401",
            "type": "t_address",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:64"
          },
          {
            "label": "totalPoolRevenue",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:65"
          },
          {
            "label": "DENOMINATIONS",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:84"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "404",
            "type": "t_struct(GlobalData)4574_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          },
          {
            "label": "stakeQuota",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)": {
            "label": "mapping(uint256 => struct VIBE.VibeNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4574_storage": {
            "label": "struct VIBE.GlobalData",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denominationCounts",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "issuedShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimedRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VibeNFT)4556_storage": {
            "label": "struct VIBE.VibeNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denomination",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d8853faac193cbdea74623d447822b540a3724412a1b44f4a21d57a9157fd391": {
      "address": "0x3e30Efc98e614E3b346aeD5D7c256aCB3705d2D2",
      "txHash": "0x574bc20748d5ae84b6f5980bc42b64286d3e56eab6bb98fff13f52a2d192fc33",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "poolContract",
            "offset": 0,
            "slot": "401",
            "type": "t_address",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:64"
          },
          {
            "label": "totalPoolRevenue",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:65"
          },
          {
            "label": "DENOMINATIONS",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:84"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "404",
            "type": "t_struct(GlobalData)4574_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          },
          {
            "label": "stakeQuota",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)": {
            "label": "mapping(uint256 => struct VIBE.VibeNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4574_storage": {
            "label": "struct VIBE.GlobalData",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denominationCounts",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "issuedShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimedRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VibeNFT)4556_storage": {
            "label": "struct VIBE.VibeNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denomination",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b6176ca884ff437b74b01eda40ac517e2dedd9fd61240880b5111d490c84fad8": {
      "address": "0xB40611397e21A5a841C0B1188524a3152dCcB061",
      "txHash": "0xae1c27ccb4004554764683bf2ed843c1c1dace51358201b9d4886911f829aad7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "poolContract",
            "offset": 0,
            "slot": "401",
            "type": "t_address",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:64"
          },
          {
            "label": "totalPoolRevenue",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:65"
          },
          {
            "label": "DENOMINATIONS",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:84"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "404",
            "type": "t_struct(GlobalData)4574_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          },
          {
            "label": "stakeQuota",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)": {
            "label": "mapping(uint256 => struct VIBE.VibeNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4574_storage": {
            "label": "struct VIBE.GlobalData",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denominationCounts",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "issuedShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimedRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VibeNFT)4556_storage": {
            "label": "struct VIBE.VibeNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denomination",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f53e4a3de7981c76b8cc0e848d82000a1d1ca086bc6db4ae382aa19f332a00d8": {
      "address": "0x4B328A105607B22e4833D53a783890B22885522C",
      "txHash": "0x5817788f836091a972c90b77eacac621cdc40362b4c7b8147018414672bcd89e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "DENOMINATIONS",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:82"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "402",
            "type": "t_struct(GlobalData)4574_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:83"
          },
          {
            "label": "stakeQuota",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:85"
          },
          {
            "label": "poolContract",
            "offset": 0,
            "slot": "409",
            "type": "t_address",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:86"
          },
          {
            "label": "totalPoolRevenue",
            "offset": 0,
            "slot": "410",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:86"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)": {
            "label": "mapping(uint256 => struct VIBE.VibeNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4574_storage": {
            "label": "struct VIBE.GlobalData",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(VibeNFT)4556_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denominationCounts",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "issuedShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimedRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VibeNFT)4556_storage": {
            "label": "struct VIBE.VibeNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denomination",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0d4bfaff0a91a68aeda404aa6daae64d17814384593b9cc75de3d32de01ca66a": {
      "address": "0xE7E8fE28F59e2D1Cf934c7f8495061c11B512155",
      "txHash": "0x2ac2a2635a408ec378ec0efcf335e92f7d89806fba854818de17dba110979872",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:80"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:81"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "6484481ae8c608c2d6f0dcb679059ed08324a608f86af6324b0a48cbed183148": {
      "address": "0xF3c35fFbEECBC9E803e046aD30C6458a7873cC80",
      "txHash": "0x97ba3ca08f7dbee4114961f8aa9628b1ff302e8c436466468bd8b1267e20ac84",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:80"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:81"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5410ec707aa494c00fda1b6a90e77e0b4d8dd96dc135b6fcea5e9822b4261a71": {
      "address": "0x27265d41Ecd79ce5d8B51f726Ed8aae65BDc89Ba",
      "txHash": "0x82413806f7266649339e5834de550f3186ff5c243a2df697fc804e79ed410798",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:80"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:81"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "66ee7ee0337cc640b05bb93c336d4f7a6547301c6e4819a9b2df02d50f9627e4": {
      "address": "0xdc9875eDb27503D65242e386AD3f80Eb7e685D91",
      "txHash": "0xd6bc5cd578b7cccb21bc33b79843808f590f7757e2a2289ae1bc625999ea0ff0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:80"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:81"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1fc9397d9cb1a067b3b899544928d180ce4e081bb54eae87d7bb4b2afdc7bae6": {
      "address": "0x8e3895eD818dDABBAc45d66bBA3Ba8eb5F00E6C7",
      "txHash": "0xc430515b3ae7ea822e2b9fe53264d16e9515415774f2bc92d98ec1fd9d73719a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:76"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:77"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:80"
          },
          {
            "label": "bonusTxCount",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "dbdbda455edb9c53729b8ff6e041b429480072003acd96af404e0f38e274bfd8": {
      "address": "0x6D281Dd8BfD8F4deCE76F3bE58EC225BE7Dc1da2",
      "txHash": "0x7391de3b070f983b0f01889d7e777ef0105c9a2d62fe2488fec38f79fcb04fe2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_coreClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:78"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:80"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4405_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:159"
          },
          {
            "label": "BLOCKS_IN_MONTH",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "totalCurrentDepositBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "boosterContract",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(VitruveoBoosterNFT)4247",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:163"
          },
          {
            "label": "lastItem",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:524"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_array(t_struct(StakeInfo)6172_storage)dyn_storage)",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:675"
          },
          {
            "label": "stakeUnlockedTotal",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:679"
          },
          {
            "label": "stakeLockedTotal",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:679"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeInfo)6172_storage)dyn_storage": {
            "label": "struct CoreVestV2.StakeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VitruveoBoosterNFT)4247": {
            "label": "contract VitruveoBoosterNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(StakeInfo)6172_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreVestV2.StakeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFT)4379_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFTClass)4346_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CoreNFT)4379_storage": {
            "label": "struct CoreVestV2.CoreNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "grantBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "grantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "unlockBasisPoints",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voteCredits",
                "type": "t_uint16",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "lockMonths",
                "type": "t_uint16",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "vestingMonths",
                "type": "t_uint16",
                "offset": 6,
                "slot": "5"
              },
              {
                "label": "claimedGrantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRebaseAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "boosts",
                "type": "t_uint16",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "boostBasisPoints",
                "type": "t_uint16",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "isRevocable",
                "type": "t_bool",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "isRevoked",
                "type": "t_bool",
                "offset": 5,
                "slot": "8"
              },
              {
                "label": "isKyc",
                "type": "t_bool",
                "offset": 6,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CoreNFTClass)4346_storage": {
            "label": "struct CoreVestV2.CoreNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isTransferable",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allowMultiple",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "totalGrants",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4405_storage": {
            "label": "struct CoreVestV2.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDepositBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "boosts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CoreNFTs",
                "type": "t_mapping(t_uint256,t_struct(CoreNFT)4379_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "CoreNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CoreNFTClass)4346_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "CoreNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)6172_storage": {
            "label": "struct CoreVestV2.StakeInfo",
            "members": [
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e7b3ee58d12274e9c8447574faca698ecbc49ce77e455b8f5189191a2c00b03a": {
      "address": "0x49a8A152686733E7252921f23a2b98Def1A89781",
      "txHash": "0xced9f90871c3b35eee2774f429b7a70e644cb77888c57495d8dcf9c9fb760efd",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_coreClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:78"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:80"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4405_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:159"
          },
          {
            "label": "BLOCKS_IN_MONTH",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "totalCurrentDepositBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:160"
          },
          {
            "label": "boosterContract",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(VitruveoBoosterNFT)4247",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:163"
          },
          {
            "label": "lastItem",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:524"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_array(t_struct(StakeInfo)6193_storage)dyn_storage)",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:679"
          },
          {
            "label": "stakeUnlockedTotal",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:683"
          },
          {
            "label": "stakeLockedTotal",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:683"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeInfo)6193_storage)dyn_storage": {
            "label": "struct CoreVestV2.StakeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VitruveoBoosterNFT)4247": {
            "label": "contract VitruveoBoosterNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(StakeInfo)6193_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreVestV2.StakeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFT)4379_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFTClass)4346_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CoreNFT)4379_storage": {
            "label": "struct CoreVestV2.CoreNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "grantBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "grantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "unlockBasisPoints",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voteCredits",
                "type": "t_uint16",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "lockMonths",
                "type": "t_uint16",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "vestingMonths",
                "type": "t_uint16",
                "offset": 6,
                "slot": "5"
              },
              {
                "label": "claimedGrantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRebaseAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "boosts",
                "type": "t_uint16",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "boostBasisPoints",
                "type": "t_uint16",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "isRevocable",
                "type": "t_bool",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "isRevoked",
                "type": "t_bool",
                "offset": 5,
                "slot": "8"
              },
              {
                "label": "isKyc",
                "type": "t_bool",
                "offset": 6,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CoreNFTClass)4346_storage": {
            "label": "struct CoreVestV2.CoreNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isTransferable",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allowMultiple",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "totalGrants",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4405_storage": {
            "label": "struct CoreVestV2.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDepositBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "boosts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CoreNFTs",
                "type": "t_mapping(t_uint256,t_struct(CoreNFT)4379_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "CoreNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CoreNFTClass)4346_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "CoreNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)6193_storage": {
            "label": "struct CoreVestV2.StakeInfo",
            "members": [
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0f894a6bdc74a43f520238d7ecd7ce164c16cfd5f8953aeee3ef32e7df682452": {
      "address": "0x0b67A28290D77b64599Da1Ee3Ec1C3Cb3E5d584a",
      "txHash": "0xd7b1569c0be78292defb604d3fa282841db0fd23faeb213cab09ad12b0901403",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:80"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:81"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5d52e97b12daba031c6a67dbacafeb30b4a32df8661fcca2e16abd4b42e636c0": {
      "address": "0xA91e2179Ea481729734009f24f3c7a4Cdf3D6319",
      "txHash": "0x3154de34ba3ecf87e3a1ef36a7aa8106c562b8068610518886655476ea8fb2df",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "MESSAGEv3",
            "offset": 0,
            "slot": "351",
            "type": "t_contract(IMessageV3)3728",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:77"
          },
          {
            "label": "FEE_TOKEN",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IERC20cl)3534",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:78"
          },
          {
            "label": "FEATURE_GATEWAY",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(IFeatureGateway)3797",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:79"
          },
          {
            "label": "FEATURES",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:80"
          },
          {
            "label": "CHAINS",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_struct(ChainData)3823_storage)",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:88"
          },
          {
            "label": "MESSAGE_OWNER",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "MessageClient",
            "src": "contracts/MessageClient.sol:89"
          },
          {
            "label": "USDC",
            "offset": 0,
            "slot": "357",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:79"
          },
          {
            "label": "bundlesSold",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:81"
          },
          {
            "label": "VTRO",
            "offset": 0,
            "slot": "359",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:81"
          },
          {
            "label": "VUSD",
            "offset": 0,
            "slot": "360",
            "type": "t_contract(IERC20)3120",
            "contract": "VEO",
            "src": "contracts/VEO.sol:81"
          },
          {
            "label": "bonusTxCount",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "VEO",
            "src": "contracts/VEO.sol:81"
          },
          {
            "label": "referralAmountCounter",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VEO",
            "src": "contracts/VEO.sol:82"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3120": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20cl)3534": {
            "label": "contract IERC20cl",
            "numberOfBytes": "20"
          },
          "t_contract(IFeatureGateway)3797": {
            "label": "contract IFeatureGateway",
            "numberOfBytes": "20"
          },
          "t_contract(IMessageV3)3728": {
            "label": "contract IMessageV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint32,t_struct(ChainData)3823_storage))": {
            "label": "mapping(uint256 => mapping(uint32 => struct MessageClient.ChainData))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint256 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_struct(ChainData)3823_storage)": {
            "label": "mapping(uint32 => struct MessageClient.ChainData)",
            "numberOfBytes": "32"
          },
          "t_struct(ChainData)3823_storage": {
            "label": "struct MessageClient.ChainData",
            "members": [
              {
                "label": "endpoint",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endpointExtended",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "confirmations",
                "type": "t_uint16",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "extended",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "cf97c529bd87eb89d3a645964fc430421e9119210f4f88ccbb895d6a1f5569e3": {
      "address": "0x41A658e52Fe1931511Edf0e5beD4802B07957515",
      "txHash": "0xd9f8a197079030c76f58a5b72c7e245c1c0c5551a1c765262e186335a38afb32",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:80"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:81"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "fbbf98e4cd86a187f1882a9c89acb1e81bad93c503f021c547a63af0d72a608b": {
      "address": "0xCA05b3475A03F047E53B33b8f79f2602ca108388",
      "txHash": "0xf2027648aaf21c6a6b9fb1212843c86de448c31c590fa8ad652441d1b076874b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:79"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:81"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:84"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:84"
          },
          {
            "label": "activeStakeTerms",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "64aeefb952acbcbb74f0448b4728aeb0d388176535990d59a2bacbc69fc10638": {
      "address": "0xCFDBd9d598359343F787866304942278A7B0fa8c",
      "txHash": "0x0422029d84595ae9a5b239502d6b48f05ac3c1d5da5c7c121b86826d5ac38382",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:79"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:81"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:84"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:84"
          },
          {
            "label": "activeStakeTerms",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "38ad12883e8dc3b140b5c3f5ecaaf0480b42bc7a3c7ee7eda1a33761cd690c4a": {
      "address": "0x8f905061B8996b41ead3D40cbDDfC1f25C281181",
      "txHash": "0x8cc7c246020698ccd4028759fc27e7dc2fc6cfdd6c2b0d915b581d834e9aad1c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:79"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3095_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:80"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:84"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:84"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:86"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:86"
          },
          {
            "label": "activeStakeTerms",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:87"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3095_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3095_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3095_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
