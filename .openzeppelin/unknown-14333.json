{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x0fF7Ec155f8AB6689Ce47C34C4F619f569F65D03",
      "kind": "uups"
    },
    {
      "address": "0xc5cc92e43100bd465bab7eedaed595bbc251e13a",
      "kind": "uups"
    },
    {
      "address": "0xD1806cC59935EE4412715c3dd11B83ec760EF64e",
      "txHash": "0xbebdbd0a94b93e168df7aa8c1066a6d6a3afba2c016662f71ac215a99d06ced5",
      "kind": "uups"
    },
    {
      "address": "0x85cD5F061249B69d763C9d82C5CC4D9E3413660E",
      "txHash": "0xfba2aeb727691198801b8d0d59345ddc2d36adf7cc48b5bd6c465f9c22bfc2e3",
      "kind": "uups"
    },
    {
      "address": "0x44265704026b273F5e6A2a80C7DcA847635fc8F9",
      "txHash": "0xe72128f403d234acea3dec0e36fa80319229a278286c49e1d11eee4a72beca9d",
      "kind": "uups"
    },
    {
      "address": "0x10baE2d860bB9De97c5875b720DaC07Bc169B17a",
      "txHash": "0xf5d81a5d8c93e37b53e1379ebf1d3c3a3e6cd8e4c0db7a0eecd630ef3cca3279",
      "kind": "uups"
    },
    {
      "address": "0x68137AC83f451e05EC60FEEbcD0E21a56810d421",
      "txHash": "0xd214717b2f487c896e23a486a8ebbb5fe69b0fa0c85d8531cfe17b2a80bd2b00",
      "kind": "uups"
    },
    {
      "address": "0xcB2E0e06cA2C5073b0E55e379810a1C6d919c6bD",
      "txHash": "0x5edaf516b39c77eed5079d7dcb6190c8028a03a32be58d64105ee1216a6b811f",
      "kind": "uups"
    },
    {
      "address": "0xbB6b2C3f05B337083a460de32f4A8295Af9ED6E7",
      "txHash": "0x2e3ba29ac5ec451a0e981022aa93cefa46cbd0a5da863af87336a4abf6b8cf70",
      "kind": "uups"
    },
    {
      "address": "0x1e8F9510e9A599204Db4dA3f352a7e73111f050C",
      "kind": "uups"
    },
    {
      "address": "0x8e6A921744335994283046449522b914d0B06E7d",
      "kind": "uups"
    },
    {
      "address": "0x2921f3c02f4c6b1BbD35c5B8deA666F78A9D5919",
      "kind": "uups"
    },
    {
      "address": "0xE3008504CcB091ee22E4CA35b2CACf26510F4949",
      "txHash": "0xe6f5a3777563ae062472aa87c7256a5f2e8e609dd7de39523f7938751f4fdfda",
      "kind": "uups"
    },
    {
      "address": "0xd34558B2680911F00d0ECaD33B74f48Ee8EB400c",
      "txHash": "0x446d2ace95ee98a94fa2b61134d165e0a449034164d9888d5b70877dce04b056",
      "kind": "uups"
    },
    {
      "address": "0x2759e7877Ab534e48A1d346c2ae3B862C947C8DB",
      "txHash": "0x8b55bc51338acc598739d54323f30d86fdf91739a11cbd8010e2c9839b32a38a",
      "kind": "uups"
    },
    {
      "address": "0x9008185dcFf1e268c39ACcC558728bC918d2B1a6",
      "txHash": "0xa2b8d5631e9c23b038568a6588b3672797723ebf4abf9dc5a0dcb17067fb131a",
      "kind": "uups"
    },
    {
      "address": "0x3C3c4EcC2AC39014260edfA25251d7584D83510F",
      "txHash": "0x8e9f51019d5eb925bcbedea3db2dfb4f64cd42ffa2ed831a3df96beca41965a6",
      "kind": "uups"
    },
    {
      "address": "0xE1a3D4C954D9a140C626BA2DEA0375D93bfa7Df9",
      "txHash": "0xd062977e080aac3848cd082e07dbd822238c6e292bafabaafe7efb5313a5b607",
      "kind": "uups"
    },
    {
      "address": "0xE2D9A4901020C602BF291B1C56E97dC6dfa5b505",
      "txHash": "0xbcdf8ed89eecf27fff397593115be0255a8e195893fa995a57b4540c1d6d513a",
      "kind": "transparent"
    },
    {
      "address": "0x2e26E4bA078Dd4DD9641DE9B538F8c9A975FD388",
      "kind": "uups"
    },
    {
      "address": "0xeC84C281396C4E971586E0707FA39585073E6403",
      "kind": "uups"
    }
  ],
  "impls": {
    "e8eddace1ccc76e5ab7dd9ca5ffc30e0be0f72daa7c544bc7cf594702cc12fe7": {
      "address": "0xA1182A8Bbcab3212c7A4B93BC920E3069d624560",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_coreClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:73"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:75"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4384_storage",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:154"
          },
          {
            "label": "BLOCKS_IN_MONTH",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:155"
          },
          {
            "label": "totalCurrentDepositBalance",
            "offset": 0,
            "slot": "361",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:155"
          },
          {
            "label": "boosterContract",
            "offset": 0,
            "slot": "362",
            "type": "t_contract(VitruveoBoosterNFT)4247",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:158"
          },
          {
            "label": "lastItem",
            "offset": 0,
            "slot": "363",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:522"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "364",
            "type": "t_mapping(t_address,t_array(t_struct(StakeInfo)6022_storage)dyn_storage)",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:673"
          },
          {
            "label": "stakeUnlockedTotal",
            "offset": 0,
            "slot": "365",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:673"
          },
          {
            "label": "stakeLockedTotal",
            "offset": 0,
            "slot": "366",
            "type": "t_uint256",
            "contract": "CoreVestV2",
            "src": "contracts/CoreVestV2.sol:674"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeInfo)6022_storage)dyn_storage": {
            "label": "struct CoreVestV2.StakeInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(VitruveoBoosterNFT)4247": {
            "label": "contract VitruveoBoosterNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(StakeInfo)6022_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreVestV2.StakeInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFT)4358_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CoreNFTClass)4325_storage)": {
            "label": "mapping(uint256 => struct CoreVestV2.CoreNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CoreNFT)4358_storage": {
            "label": "struct CoreVestV2.CoreNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "grantBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "grantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "depositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "unlockBasisPoints",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "voteCredits",
                "type": "t_uint16",
                "offset": 2,
                "slot": "5"
              },
              {
                "label": "lockMonths",
                "type": "t_uint16",
                "offset": 4,
                "slot": "5"
              },
              {
                "label": "vestingMonths",
                "type": "t_uint16",
                "offset": 6,
                "slot": "5"
              },
              {
                "label": "claimedGrantAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "claimedRebaseAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "boosts",
                "type": "t_uint16",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "boostBasisPoints",
                "type": "t_uint16",
                "offset": 2,
                "slot": "8"
              },
              {
                "label": "isRevocable",
                "type": "t_bool",
                "offset": 4,
                "slot": "8"
              },
              {
                "label": "isRevoked",
                "type": "t_bool",
                "offset": 5,
                "slot": "8"
              },
              {
                "label": "isKyc",
                "type": "t_bool",
                "offset": 6,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(CoreNFTClass)4325_storage": {
            "label": "struct CoreVestV2.CoreNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isTransferable",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "allowMultiple",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "2"
              },
              {
                "label": "totalGrants",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)4384_storage": {
            "label": "struct CoreVestV2.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDepositBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "boosts",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CoreNFTs",
                "type": "t_mapping(t_uint256,t_struct(CoreNFT)4358_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "CoreNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CoreNFTClass)4325_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "CoreNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeInfo)6022_storage": {
            "label": "struct CoreVestV2.StakeInfo",
            "members": [
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0xA1182A8Bbcab3212c7A4B93BC920E3069d624560"
      ]
    },
    "f2d5dd8c8341b81f791d4363aaa8a0ef098967e48b309a822b1f58ef5a97f076": {
      "address": "0xA8a4Eb2F65133643759802765B7d9Fe16EB0B32D",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "DENOMINATIONS",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:72"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "402",
            "type": "t_struct(GlobalData)6817_storage",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:72"
          },
          {
            "label": "stakeQuota",
            "offset": 0,
            "slot": "408",
            "type": "t_uint256",
            "contract": "VIBE",
            "src": "contracts/VIBE.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VibeNFT)6799_storage)": {
            "label": "mapping(uint256 => struct VIBE.VibeNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)6817_storage": {
            "label": "struct VIBE.GlobalData",
            "members": [
              {
                "label": "nfts",
                "type": "t_mapping(t_uint256,t_struct(VibeNFT)6799_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denominationCounts",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextTokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "issuedShares",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "totalRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimedRevenueShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VibeNFT)6799_storage": {
            "label": "struct VIBE.VibeNFT",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "denomination",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "claimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0xA8a4Eb2F65133643759802765B7d9Fe16EB0B32D"
      ]
    },
    "087bcf8892e52833995d8cba5dffac5b4ede95e6ae95f21fc3f17479b060eef7": {
      "address": "0x2F03CE30EFd3e126e751380A4Deba82C24a46A87",
      "txHash": "0x2a44ee2a0d734f18c7e9b5d87c1f14e268f76c3f92e6e5665ffff8a46d249bbb",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "paused",
            "offset": 0,
            "slot": "351",
            "type": "t_bool",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:64"
          },
          {
            "label": "pairAddress",
            "offset": 1,
            "slot": "351",
            "type": "t_address",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:64"
          },
          {
            "label": "totalWrapped",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:65"
          },
          {
            "label": "totalEpochWrapped",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:66"
          },
          {
            "label": "totalEpochResetBlock",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:66"
          },
          {
            "label": "userWrappedLastBlock",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:69"
          },
          {
            "label": "priceByEpoch",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "wVTRU",
            "src": "contracts/wVTRU.sol:72"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "16f546cb42fa99c20c3ae034384981ae1eddde9abff29d6af6377b71a591028c": {
      "address": "0x4b76379cf823F9C7cB312FAc95b4fB250f5fd468",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1681_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:54"
          },
          {
            "label": "assetList",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Set)4666_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:55"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(GlobalInfo)3171_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CreatorInfo)4529_storage)dyn_storage": {
            "label": "struct ICreatorData.CreatorInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Source)4593": {
            "label": "enum ICreatorData.Source",
            "members": [
              "STUDIO",
              "SELF",
              "OTHER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Status)4589": {
            "label": "enum ICreatorData.Status",
            "members": [
              "DRAFT",
              "PREVIEW",
              "ACTIVE",
              "HIDDEN",
              "BLOCKED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4508_storage)": {
            "label": "mapping(string => struct ICreatorData.AssetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInfo)4556_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)4508_storage": {
            "label": "struct ICreatorData.AssetInfo",
            "members": [
              {
                "label": "key",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "core",
                "type": "t_struct(CoreInfo)4524_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_struct(CreatorInfo)4529_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "collaborators",
                "type": "t_array(t_struct(CreatorInfo)4529_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "licenses",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4589",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "originator",
                "type": "t_enum(Source)4593",
                "offset": 1,
                "slot": "11"
              },
              {
                "label": "editor",
                "type": "t_address",
                "offset": 2,
                "slot": "11"
              },
              {
                "label": "isPremium",
                "type": "t_bool",
                "offset": 22,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(CoreInfo)4524_storage": {
            "label": "struct ICreatorData.CoreInfo",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "mediaItems",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4589",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)1681_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreatorInfo)4529_storage": {
            "label": "struct ICreatorData.CreatorInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "split",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalInfo)3171_storage": {
            "label": "struct AssetRegistry.GlobalInfo",
            "members": [
              {
                "label": "assetsConsigned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "premiumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creatorCreditsRequired",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "assets",
                "type": "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4508_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenses",
                "type": "t_mapping(t_uint256,t_struct(LicenseInfo)4556_storage)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(LicenseInfo)4556_storage": {
            "label": "struct ICreatorData.LicenseInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "licenseTypeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "editions",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "editionCents",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "discountEditions",
                "type": "t_uint64",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "discountBasisPoints",
                "type": "t_uint64",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "discountMaxBasisPoints",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "available",
                "type": "t_uint64",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "code",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4666_storage": {
            "label": "struct UnorderedStringKeySetLib.Set",
            "members": [
              {
                "label": "keyPointers",
                "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "keyList",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2b262175debd95ff09a2ac218caa06815fc94f4bcf84cfb0f097db789a647da7": {
      "address": "0x4397423cB87C5a4690412e900D6c3F7C9B2E2f69",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseInstanceId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:58"
          },
          {
            "label": "_licenseTypeId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:59"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalInfo)3623_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:89"
          },
          {
            "label": "mintRegistry",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3631_storage)dyn_storage)",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:91"
          },
          {
            "label": "platformFeeBasisPoints",
            "offset": 0,
            "slot": "364",
            "type": "t_uint64",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "vibeContract",
            "offset": 8,
            "slot": "364",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(OwnedTokenInfo)3631_storage)dyn_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3631_storage)dyn_storage)": {
            "label": "mapping(address => struct LicenseRegistry.OwnedTokenInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3452_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInstanceInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3591_storage)": {
            "label": "mapping(uint256 => struct LicenseRegistry.LicenseTypeInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1728_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)3623_storage": {
            "label": "struct LicenseRegistry.GlobalInfo",
            "members": [
              {
                "label": "usdVtruExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collectorCreditContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creatorVaultFactoryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "studioAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenseTypes",
                "type": "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3591_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licenseInstances",
                "type": "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3452_storage)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseInstancesByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "allowBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "allowList",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(LicenseInstanceInfo)3452_storage": {
            "label": "struct ICreatorData.LicenseInstanceInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "licenseFeeCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "amountPaidCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseQuantity",
                "type": "t_uint64",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "platformBasisPoints",
                "type": "t_uint16",
                "offset": 8,
                "slot": "7"
              },
              {
                "label": "curatorBasisPoints",
                "type": "t_uint16",
                "offset": 10,
                "slot": "7"
              },
              {
                "label": "sellerBasisPoints",
                "type": "t_uint16",
                "offset": 12,
                "slot": "7"
              },
              {
                "label": "creatorRoyaltyBasisPoints",
                "type": "t_uint16",
                "offset": 14,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LicenseTypeInfo)3591_storage": {
            "label": "struct LicenseRegistry.LicenseTypeInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isMintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isElastic",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 3,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(OwnedTokenInfo)3631_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "af40b3a282e4ffae68108f690f01d41fe497d8e579d8545032b1f2ea8438e858": {
      "address": "0x71c8c67C854BDb7C28ae16Fd080587C95d678513",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(GlobalInfo)3438_storage",
            "contract": "MediaRegistry",
            "src": "contracts/MediaRegistry.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)": {
            "label": "mapping(string => string[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_string_storage))": {
            "label": "mapping(string => mapping(string => string))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_string_storage)": {
            "label": "mapping(string => string)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)3438_storage": {
            "label": "struct MediaRegistry.GlobalInfo",
            "members": [
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "media",
                "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_string_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "mediaList",
                "type": "t_mapping(t_string_memory_ptr,t_array(t_string_storage)dyn_storage)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c4a2a4081b96635c925a2e96e2b32741a16566edede75f939d6f98213169af3a": {
      "address": "0xcbF7c8017Ac1f9e8aca135371B3dABAbC665D5C7",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_creditClassId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:46"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2757_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:47"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalData)4307_storage",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:92"
          },
          {
            "label": "usdRedeemed",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:96"
          },
          {
            "label": "_blockTransfers",
            "offset": 0,
            "slot": "360",
            "type": "t_bool",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:97"
          },
          {
            "label": "BlockedAccounts",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:98"
          },
          {
            "label": "BlockedVaults",
            "offset": 0,
            "slot": "362",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:100"
          },
          {
            "label": "BurnList",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "CollectorCredit",
            "src": "contracts/CollectorCredit.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)": {
            "label": "mapping(uint256 => struct CollectorCredit.CreditNFTClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2757_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreditNFT)4285_storage": {
            "label": "struct CollectorCredit.CreditNFT",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "classId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "activeBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(CreditNFTClass)4274_storage": {
            "label": "struct CollectorCredit.CreditNFTClass",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isUSD",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GlobalData)4307_storage": {
            "label": "struct CollectorCredit.GlobalData",
            "members": [
              {
                "label": "classImageURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "CreditNFTs",
                "type": "t_mapping(t_uint256,t_struct(CreditNFT)4285_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "CreditNFTClasses",
                "type": "t_mapping(t_uint256,t_struct(CreditNFTClass)4274_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "CreditNFTsByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "TotalNFTsByClass",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "dcd5fe7fe4cf586533528ecff8e638e42a66675a446216f99bb352014f5bc405": {
      "address": "0xaBF9733df8108092f9eF3905F7f9a9cb3407147F",
      "txHash": "0xa9d89e4f5e7c6c7098fd88312f358404f5853b3e9ef508dbeb97b847eadd072d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:56"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "352",
            "type": "t_uint256",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:57"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:58"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:61"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:62"
          },
          {
            "label": "stakingTerms",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_struct(StakingTerm)3089_storage)",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:78"
          },
          {
            "label": "stakes",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_struct(Stake)3102_storage)",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:79"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:80"
          },
          {
            "label": "nextStakeId",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:80"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "360",
            "type": "t_uint256",
            "contract": "VTRUStaking",
            "src": "contracts/VTRUStaking.sol:81"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Stake)3102_storage)": {
            "label": "mapping(uint256 => struct VTRUStaking.Stake)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakingTerm)3089_storage)": {
            "label": "mapping(uint256 => struct VTRUStaking.StakingTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Stake)3102_storage": {
            "label": "struct VTRUStaking.Stake",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "withdrawn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(StakingTerm)3089_storage": {
            "label": "struct VTRUStaking.StakingTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "50f4ef833060fe2eb487a4f3965ab9ee2d4e3068f08327843d851882fe713a2e": {
      "address": "0x2a929551cEE102D64E86b4f76C6661e64E843bba",
      "txHash": "0x70574c8f4c81569aad488b4ee1ebbcc31ac43691a5bec136e4257fefb553f6b6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakingTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:67"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:70"
          },
          {
            "label": "userWithdrawn",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:71"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:79"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1fddda4238883c35691b12b146c3d9f314b30bedc2ca4923af507f9cf7a3851f": {
      "address": "0x945D32A1bEE2EdbA0457065Ee3036434A196c7c9",
      "txHash": "0x8be1747f527c627e83b2718864f12b078b41ccd17f65e2ef7aa23b00ec77577f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:66"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "userWithdrawn",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:70"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "99563edfe9365fe1d7bb7ff49f22fe48ad7b1d72e3005787ab127d302621d6de": {
      "address": "0x9Cac164D1553Ef534d55a7aBBAb7763cEE1bef11",
      "txHash": "0x61e802d37c7a9a5cbf282008a1a330e188c96fc80a490d820bfb3e3879de26a5",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:65"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:68"
          },
          {
            "label": "userWithdrawn",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:73"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:73"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3086_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3079_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3079_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3086_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f41a9441510ae46a7d1d00609fa3a83229b02a8bb01dcf8817a6a9c15fc72c96": {
      "address": "0x1f46F6936E62f5593692F0Ef47c347d98A9048b9",
      "txHash": "0x48c4f5c4269b751f16d351dce1305807045a4da75df8ad71262c2ddcb412ed98",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:66"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "userWithdrawn",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:71"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "359",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3084_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3091_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "eaee551f982958e51a5fb7bc87f03e71922fefd25bcbce51600967365e92a844": {
      "address": "0x4ce4e68F2bc49ddf283c90b183cbFA76180b3316",
      "txHash": "0x20b796b32c0153b8d42573ff8f90f515829645e6b66d887eaece828b183282e6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:71"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:73"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3084_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3091_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c72793daf108464f1ec9b925cd3176e2908518f110a845a702681b12b818abd2": {
      "address": "0xe4b90b374c8cE14a698090B496C57F76Ee962C83",
      "txHash": "0x19f93de84fe0be7c3185d00dde2d1b9a5d4f0fef20975a5f0eeb434861cec815",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:69"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:71"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:73"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:74"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:75"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:76"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3084_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3091_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7360e614e97ed61bf397ffdbca1ad2753299022be368092ef79e8e0394877be0": {
      "address": "0xBFfFda780bc78DE87316525DFd8Aaafe0523B251",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenId",
            "offset": 0,
            "slot": "301",
            "type": "t_struct(Counter)3248_storage",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:56"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(GlobalData)5846_storage",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:65"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_struct(TokenInfo)5838_storage)",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:66"
          },
          {
            "label": "lastDepositBlockNumber",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:68"
          },
          {
            "label": "isTrusted",
            "offset": 0,
            "slot": "307",
            "type": "t_bool",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:70"
          },
          {
            "label": "isBlocked",
            "offset": 1,
            "slot": "307",
            "type": "t_bool",
            "contract": "CreatorVault",
            "src": "contracts/CreatorVault.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenInfo)5838_storage)": {
            "label": "mapping(uint256 => struct CreatorVault.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3248_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalData)5846_storage": {
            "label": "struct CreatorVault.GlobalData",
            "members": [
              {
                "label": "creatorCredits",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "wallets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseRegistry",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TokenInfo)5838_storage": {
            "label": "struct CreatorVault.TokenInfo",
            "members": [
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "licenseInstanceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ef42424661b66fccefa8db6ce7a9d0caa59b0092129fabdd687dede3396fe1a2": {
      "address": "0xaF31Fc575017fad77c0EBD2D4ba3b47432Cb6d1E",
      "txHash": "0x7d3645724d62b9e1b4d855e97b4ad874e6cd9cc4de2b68ad4f8516f2ad329745",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseInstanceId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:58"
          },
          {
            "label": "_licenseTypeId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:59"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalInfo)3638_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:89"
          },
          {
            "label": "mintRegistry",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage)",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "platformFeeBasisPoints",
            "offset": 0,
            "slot": "364",
            "type": "t_uint64",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          },
          {
            "label": "vibeContract",
            "offset": 8,
            "slot": "364",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage)": {
            "label": "mapping(address => struct LicenseRegistry.OwnedTokenInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInstanceInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3606_storage)": {
            "label": "mapping(uint256 => struct LicenseRegistry.LicenseTypeInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1728_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)3638_storage": {
            "label": "struct LicenseRegistry.GlobalInfo",
            "members": [
              {
                "label": "usdVtruExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collectorCreditContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creatorVaultFactoryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "studioAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenseTypes",
                "type": "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3606_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licenseInstances",
                "type": "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseInstancesByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "allowBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "allowList",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(LicenseInstanceInfo)3467_storage": {
            "label": "struct ICreatorData.LicenseInstanceInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "licenseFeeCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "amountPaidCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseQuantity",
                "type": "t_uint64",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "platformBasisPoints",
                "type": "t_uint16",
                "offset": 8,
                "slot": "7"
              },
              {
                "label": "curatorBasisPoints",
                "type": "t_uint16",
                "offset": 10,
                "slot": "7"
              },
              {
                "label": "sellerBasisPoints",
                "type": "t_uint16",
                "offset": 12,
                "slot": "7"
              },
              {
                "label": "creatorRoyaltyBasisPoints",
                "type": "t_uint16",
                "offset": 14,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LicenseTypeInfo)3606_storage": {
            "label": "struct LicenseRegistry.LicenseTypeInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isMintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isElastic",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 3,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(OwnedTokenInfo)3646_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0xaF31Fc575017fad77c0EBD2D4ba3b47432Cb6d1E",
        "0x5C68964EC5a7D0291CBB74E8B99F0dA38961B44C"
      ]
    },
    "cf96a65a33d990ac2267fc21b4f16ed6cd6f15481fbc04c97dfd67466f975011": {
      "address": "0x2bA7f4584Fe4094d515c7d09206AEb794369B82E",
      "txHash": "0xeda13c325f50dde7de90523ae4dcb81dc4286564b0284c97dbefcf52148ea766",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e7c1aeed8821531fd7fd812fb9c85024bae0c12d7ea518d990761b6bf53aed45": {
      "address": "0xe8875aa47F95894b824C68dcEB0273a8Fc0437F6",
      "txHash": "0x0747625d7144f9d8c551a64d5f82c1c1ff6df2729b69d0be0fabfd215a296583",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:373"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:379"
          },
          {
            "label": "fallbackVtruPrice",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:379"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "39e8e329bee0f223876c107d863dcb6dea5897d22baff17718006da3bdb6016e": {
      "address": "0x8B09059E6E22ec326d1e7608376178F29bFB0827",
      "txHash": "0x0fb1ff641fe68e89e2bef6d905f4f0cfc3d736dc3da4074e42545d23750fe744",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseInstanceId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:58"
          },
          {
            "label": "_licenseTypeId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:59"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalInfo)3638_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:90"
          },
          {
            "label": "mintRegistry",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage)",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "platformFeeBasisPoints",
            "offset": 0,
            "slot": "364",
            "type": "t_uint64",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "vibeContract",
            "offset": 8,
            "slot": "364",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          },
          {
            "label": "vusdContract",
            "offset": 0,
            "slot": "365",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3646_storage)dyn_storage)": {
            "label": "mapping(address => struct LicenseRegistry.OwnedTokenInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInstanceInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3606_storage)": {
            "label": "mapping(uint256 => struct LicenseRegistry.LicenseTypeInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1728_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)3638_storage": {
            "label": "struct LicenseRegistry.GlobalInfo",
            "members": [
              {
                "label": "usdVtruExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collectorCreditContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creatorVaultFactoryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "studioAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenseTypes",
                "type": "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3606_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licenseInstances",
                "type": "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseInstancesByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "allowBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "allowList",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(LicenseInstanceInfo)3467_storage": {
            "label": "struct ICreatorData.LicenseInstanceInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "licenseFeeCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "amountPaidCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseQuantity",
                "type": "t_uint64",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "platformBasisPoints",
                "type": "t_uint16",
                "offset": 8,
                "slot": "7"
              },
              {
                "label": "curatorBasisPoints",
                "type": "t_uint16",
                "offset": 10,
                "slot": "7"
              },
              {
                "label": "sellerBasisPoints",
                "type": "t_uint16",
                "offset": 12,
                "slot": "7"
              },
              {
                "label": "creatorRoyaltyBasisPoints",
                "type": "t_uint16",
                "offset": 14,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LicenseTypeInfo)3606_storage": {
            "label": "struct LicenseRegistry.LicenseTypeInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isMintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isElastic",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 3,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(OwnedTokenInfo)3646_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8b53e6c1a2ae1adf2475e22a532b7dcbf4da25ee2d9d3049d7047ffd28ea5ff2": {
      "address": "0xe4b90b374c8cE14a698090B496C57F76Ee962C83",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakeTerms",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:77"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:78"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:81"
          },
          {
            "label": "totalRewardDistributed",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:82"
          },
          {
            "label": "totalStakesCreated",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:83"
          },
          {
            "label": "activeStakes",
            "offset": 0,
            "slot": "356",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:84"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "357",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:84"
          },
          {
            "label": "nextStakeTermId",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "CoreStake",
            "src": "contracts/CoreStake.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage": {
            "label": "struct CoreStake.StakeTermInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(StakeTermInfo)3091_storage)dyn_storage)": {
            "label": "mapping(address => struct CoreStake.StakeTermInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakeTerm)3084_storage)": {
            "label": "mapping(uint256 => struct CoreStake.StakeTerm)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTerm)3084_storage": {
            "label": "struct CoreStake.StakeTerm",
            "members": [
              {
                "label": "epochs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aprBasisPoints",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(StakeTermInfo)3091_storage": {
            "label": "struct CoreStake.StakeTermInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "stakeTermID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0xe4b90b374c8cE14a698090B496C57F76Ee962C83",
        "0xecfc887B9fdc43Bd3B54834278d71a94c9Fc38e6"
      ]
    },
    "b434794ab5faf759f19288890d61f25a9e4e61dcc8c83445157838245db5bc9b": {
      "address": "0xaD6893B791F5e797f114e71D7E32170B3A39Ef77",
      "txHash": "0x9eb308145146a3087ac4249e3627f4f2b428b8a8632e74376a7647d75c133f66",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3707_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:68"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:70"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:75"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:370"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:376"
          },
          {
            "label": "fallbackVtruPrice",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:376"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3707_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3707_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1d5b8f4cf1a8372a1c016145150738554ed2075f4096a553783073762448627c": {
      "address": "0xA62F99e648AccB4187C80E52C3BFf14352695A7A",
      "txHash": "0x85c967d5e97dadd558779317ebf374258b80be1331a84a9760d0bb925c105820",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "grants",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_struct(GrantInfo)3715_storage)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:72"
          },
          {
            "label": "redemptionAmounts",
            "offset": 0,
            "slot": "352",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:74"
          },
          {
            "label": "redemptionCounts",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:76"
          },
          {
            "label": "maxRedemptionAmountPerVault",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:79"
          },
          {
            "label": "maxRedemptionsPerVault",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:80"
          },
          {
            "label": "blockList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:374"
          },
          {
            "label": "vaultMaxRedemptionAmounts",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:380"
          },
          {
            "label": "fallbackVtruPrice",
            "offset": 0,
            "slot": "358",
            "type": "t_uint256",
            "contract": "VUSD",
            "src": "contracts/VUSD.sol:380"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(GrantInfo)3715_storage)": {
            "label": "mapping(address => struct VUSD.GrantInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(GrantInfo)3715_storage": {
            "label": "struct VUSD.GrantInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5a4ac4704647f30d9fdad47c8f2e217128870b353a79c7cba88a6da84ca81d0b": {
      "address": "0x978c7ce0DbfC81B4E7a06910E4C20677Bdc77fBc",
      "txHash": "0xccbab47a887a3ab9afafdee327f6f801d9d1826dfc2d9482ad831ad522a7e8a0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1681_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:54"
          },
          {
            "label": "assetList",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Set)4727_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:55"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(GlobalInfo)3171_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CreatorInfo)4590_storage)dyn_storage": {
            "label": "struct ICreatorData.CreatorInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Source)4654": {
            "label": "enum ICreatorData.Source",
            "members": [
              "STUDIO",
              "SELF",
              "OTHER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Status)4650": {
            "label": "enum ICreatorData.Status",
            "members": [
              "DRAFT",
              "PREVIEW",
              "ACTIVE",
              "HIDDEN",
              "BLOCKED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4569_storage)": {
            "label": "mapping(string => struct ICreatorData.AssetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInfo)4617_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)4569_storage": {
            "label": "struct ICreatorData.AssetInfo",
            "members": [
              {
                "label": "key",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "core",
                "type": "t_struct(CoreInfo)4585_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_struct(CreatorInfo)4590_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "collaborators",
                "type": "t_array(t_struct(CreatorInfo)4590_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "licenses",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4650",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "originator",
                "type": "t_enum(Source)4654",
                "offset": 1,
                "slot": "11"
              },
              {
                "label": "editor",
                "type": "t_address",
                "offset": 2,
                "slot": "11"
              },
              {
                "label": "isPremium",
                "type": "t_bool",
                "offset": 22,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(CoreInfo)4585_storage": {
            "label": "struct ICreatorData.CoreInfo",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "mediaItems",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4650",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)1681_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreatorInfo)4590_storage": {
            "label": "struct ICreatorData.CreatorInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "split",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalInfo)3171_storage": {
            "label": "struct AssetRegistry.GlobalInfo",
            "members": [
              {
                "label": "assetsConsigned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "premiumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creatorCreditsRequired",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "assets",
                "type": "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4569_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenses",
                "type": "t_mapping(t_uint256,t_struct(LicenseInfo)4617_storage)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(LicenseInfo)4617_storage": {
            "label": "struct ICreatorData.LicenseInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "licenseTypeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "editions",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "editionCents",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "discountEditions",
                "type": "t_uint64",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "discountBasisPoints",
                "type": "t_uint64",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "discountMaxBasisPoints",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "available",
                "type": "t_uint64",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "code",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4727_storage": {
            "label": "struct UnorderedStringKeySetLib.Set",
            "members": [
              {
                "label": "keyPointers",
                "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "keyList",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0x978c7ce0DbfC81B4E7a06910E4C20677Bdc77fBc",
        "0xe383e4093b33c806A9aB784f5F6bB2dD21142f8d",
        "0x3aCad6D179CEd23Ce64F0cC85e61398F7DA62A5B",
        "0x4b76379cf823F9C7cB312FAc95b4fB250f5fd468"
      ]
    },
    "ab8426314f064ceac0181328e0357b4d1c0f200f2d35bc7693774b8666310579": {
      "address": "0xbF3Fc393060e75368892b4D517866D7660241151",
      "txHash": "0x74cc79d4c27041eda683bcaf818580322c681a85fc732a9f1ef661beae5160a6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1681_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:54"
          },
          {
            "label": "assetList",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Set)4692_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:55"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(GlobalInfo)3171_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CreatorInfo)4555_storage)dyn_storage": {
            "label": "struct ICreatorData.CreatorInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Source)4619": {
            "label": "enum ICreatorData.Source",
            "members": [
              "STUDIO",
              "SELF",
              "OTHER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Status)4615": {
            "label": "enum ICreatorData.Status",
            "members": [
              "DRAFT",
              "PREVIEW",
              "ACTIVE",
              "HIDDEN",
              "BLOCKED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4534_storage)": {
            "label": "mapping(string => struct ICreatorData.AssetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInfo)4582_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)4534_storage": {
            "label": "struct ICreatorData.AssetInfo",
            "members": [
              {
                "label": "key",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "core",
                "type": "t_struct(CoreInfo)4550_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_struct(CreatorInfo)4555_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "collaborators",
                "type": "t_array(t_struct(CreatorInfo)4555_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "licenses",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4615",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "originator",
                "type": "t_enum(Source)4619",
                "offset": 1,
                "slot": "11"
              },
              {
                "label": "editor",
                "type": "t_address",
                "offset": 2,
                "slot": "11"
              },
              {
                "label": "isPremium",
                "type": "t_bool",
                "offset": 22,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(CoreInfo)4550_storage": {
            "label": "struct ICreatorData.CoreInfo",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "mediaItems",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4615",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)1681_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreatorInfo)4555_storage": {
            "label": "struct ICreatorData.CreatorInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "split",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalInfo)3171_storage": {
            "label": "struct AssetRegistry.GlobalInfo",
            "members": [
              {
                "label": "assetsConsigned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "premiumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creatorCreditsRequired",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "assets",
                "type": "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4534_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenses",
                "type": "t_mapping(t_uint256,t_struct(LicenseInfo)4582_storage)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(LicenseInfo)4582_storage": {
            "label": "struct ICreatorData.LicenseInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "licenseTypeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "editions",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "editionCents",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "discountEditions",
                "type": "t_uint64",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "discountBasisPoints",
                "type": "t_uint64",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "discountMaxBasisPoints",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "available",
                "type": "t_uint64",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "code",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4692_storage": {
            "label": "struct UnorderedStringKeySetLib.Set",
            "members": [
              {
                "label": "keyPointers",
                "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "keyList",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f99d7a772fd486b9a62d32e39be17e63f0ca53fd7e2c6fd225cd53930efcc37d": {
      "address": "0x543E5AbB8331186b369106E3d9Caa865f1899574",
      "txHash": "0x51b5cba20da815396c7255ffb71a65264dab4bbd99141d8b6af6905b897415dd",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1681_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:54"
          },
          {
            "label": "assetList",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Set)4692_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:55"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "354",
            "type": "t_struct(GlobalInfo)3171_storage",
            "contract": "AssetRegistry",
            "src": "contracts/AssetRegistry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CreatorInfo)4555_storage)dyn_storage": {
            "label": "struct ICreatorData.CreatorInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Source)4619": {
            "label": "enum ICreatorData.Source",
            "members": [
              "STUDIO",
              "SELF",
              "OTHER"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Status)4615": {
            "label": "enum ICreatorData.Status",
            "members": [
              "DRAFT",
              "PREVIEW",
              "ACTIVE",
              "HIDDEN",
              "BLOCKED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4534_storage)": {
            "label": "mapping(string => struct ICreatorData.AssetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint256)": {
            "label": "mapping(string => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInfo)4582_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInfo)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AssetInfo)4534_storage": {
            "label": "struct ICreatorData.AssetInfo",
            "members": [
              {
                "label": "key",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "core",
                "type": "t_struct(CoreInfo)4550_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creator",
                "type": "t_struct(CreatorInfo)4555_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "collaborators",
                "type": "t_array(t_struct(CreatorInfo)4555_storage)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "licenses",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4615",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "originator",
                "type": "t_enum(Source)4619",
                "offset": 1,
                "slot": "11"
              },
              {
                "label": "editor",
                "type": "t_address",
                "offset": 2,
                "slot": "11"
              },
              {
                "label": "isPremium",
                "type": "t_bool",
                "offset": 22,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(CoreInfo)4550_storage": {
            "label": "struct ICreatorData.CoreInfo",
            "members": [
              {
                "label": "title",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaTypes",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "mediaItems",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(Status)4615",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)1681_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CreatorInfo)4555_storage": {
            "label": "struct ICreatorData.CreatorInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "split",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalInfo)3171_storage": {
            "label": "struct AssetRegistry.GlobalInfo",
            "members": [
              {
                "label": "assetsConsigned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "premiumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creatorCreditsRequired",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "mediaRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "assets",
                "type": "t_mapping(t_string_memory_ptr,t_struct(AssetInfo)4534_storage)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenses",
                "type": "t_mapping(t_uint256,t_struct(LicenseInfo)4582_storage)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(LicenseInfo)4582_storage": {
            "label": "struct ICreatorData.LicenseInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "licenseTypeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "editions",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "editionCents",
                "type": "t_uint64",
                "offset": 8,
                "slot": "2"
              },
              {
                "label": "discountEditions",
                "type": "t_uint64",
                "offset": 16,
                "slot": "2"
              },
              {
                "label": "discountBasisPoints",
                "type": "t_uint64",
                "offset": 24,
                "slot": "2"
              },
              {
                "label": "discountMaxBasisPoints",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "available",
                "type": "t_uint64",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "code",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4692_storage": {
            "label": "struct UnorderedStringKeySetLib.Set",
            "members": [
              {
                "label": "keyPointers",
                "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "keyList",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5f1584a02caf756fb749c29bd51a7783251057f502e0c00e8ef79326553a5eac": {
      "address": "0x34c3827D69d2283eF8Fe943Cf186aA30b9d76c24",
      "txHash": "0x5869e45e00f8b2f413078caf6069a8c12108364f82933b860cef787c890caa9f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_licenseInstanceId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:59"
          },
          {
            "label": "_licenseTypeId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)1728_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:60"
          },
          {
            "label": "global",
            "offset": 0,
            "slot": "353",
            "type": "t_struct(GlobalInfo)3641_storage",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:92"
          },
          {
            "label": "mintRegistry",
            "offset": 0,
            "slot": "363",
            "type": "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3649_storage)dyn_storage)",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:94"
          },
          {
            "label": "platformFeeBasisPoints",
            "offset": 0,
            "slot": "364",
            "type": "t_uint64",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:94"
          },
          {
            "label": "vibeContract",
            "offset": 8,
            "slot": "364",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:95"
          },
          {
            "label": "vusdContract",
            "offset": 0,
            "slot": "365",
            "type": "t_address",
            "contract": "LicenseRegistry",
            "src": "contracts/LicenseRegistry.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(OwnedTokenInfo)3649_storage)dyn_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(OwnedTokenInfo)3649_storage)dyn_storage)": {
            "label": "mapping(address => struct LicenseRegistry.OwnedTokenInfo[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)": {
            "label": "mapping(uint256 => struct ICreatorData.LicenseInstanceInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3609_storage)": {
            "label": "mapping(uint256 => struct LicenseRegistry.LicenseTypeInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1728_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GlobalInfo)3641_storage": {
            "label": "struct LicenseRegistry.GlobalInfo",
            "members": [
              {
                "label": "usdVtruExchangeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collectorCreditContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assetRegistryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "creatorVaultFactoryContract",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "studioAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "licenseTypes",
                "type": "t_mapping(t_uint256,t_struct(LicenseTypeInfo)3609_storage)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licenseInstances",
                "type": "t_mapping(t_uint256,t_struct(LicenseInstanceInfo)3467_storage)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseInstancesByOwner",
                "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "allowBlockNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "allowList",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(LicenseInstanceInfo)3467_storage": {
            "label": "struct ICreatorData.LicenseInstanceInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "licenseId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "licenseFeeCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "amountPaidCents",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "licensees",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "licenseQuantity",
                "type": "t_uint64",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "platformBasisPoints",
                "type": "t_uint16",
                "offset": 8,
                "slot": "7"
              },
              {
                "label": "curatorBasisPoints",
                "type": "t_uint16",
                "offset": 10,
                "slot": "7"
              },
              {
                "label": "sellerBasisPoints",
                "type": "t_uint16",
                "offset": 12,
                "slot": "7"
              },
              {
                "label": "creatorRoyaltyBasisPoints",
                "type": "t_uint16",
                "offset": 14,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LicenseTypeInfo)3609_storage": {
            "label": "struct LicenseRegistry.LicenseTypeInfo",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "info",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isMintable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isElastic",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 3,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(OwnedTokenInfo)3649_storage": {
            "label": "struct LicenseRegistry.OwnedTokenInfo",
            "members": [
              {
                "label": "vault",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
